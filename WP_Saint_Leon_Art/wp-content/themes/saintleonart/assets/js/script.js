;(function(){'use strict';var targetDate=new Date("2018/08/19 18:00:00");var days;var hrs;var min;var sec;$(function(){timeToLaunch();numberTransition('#days .number',days,1000,'easeOutQuad');numberTransition('#hours .number',hrs,1000,'easeOutQuad');numberTransition('#minutes .number',min,1000,'easeOutQuad');setTimeout(countDownTimer,1001);});function timeToLaunch(){var currentDate=new Date();var diff=(currentDate-targetDate)/1000;var diff=Math.abs(Math.floor(diff));days=Math.floor(diff/(24*60*60));sec=diff-days*24*60*60;hrs=Math.floor(sec/(60*60));sec=sec-hrs*60*60;min=Math.floor(sec/60);sec=sec-min*60;}function countDownTimer(){timeToLaunch();$("#days .number").text(days);$("#hours .number").text(hrs);$("#minutes .number").text(min);setTimeout(countDownTimer,1000);}function numberTransition(id,endPoint,transitionDuration,transitionEase){$({numberCount:$(id).text()}).animate({numberCount:endPoint},{duration:transitionDuration,easing:transitionEase,step:function step(){$(id).text(Math.floor(this.numberCount));},complete:function complete(){$(id).text(this.numberCount);}});};var hamburger=document.querySelector('.hamburger');var search=document.querySelector('.search-icon');hamburger.addEventListener('click',function(e){e.stopPropagation();e.preventDefault();hamburger.classList.toggle('is-active');document.body.classList.toggle('has-sidebar');});search.addEventListener('click',function(e){e.stopPropagation();e.preventDefault();search.classList.toggle('open');search.parentNode.classList.toggle('open');});var buttons=document.querySelectorAll('.program__navigation .day a');function fActive(e){e.stopPropagation();if(document.querySelector('.program__navigation .day a.active')){document.querySelector('.program__navigation .day a.active').classList.remove('active');document.querySelector('.program .timeline.all#all').classList.remove('here');}e.currentTarget.classList.add('active');};Array.from(buttons).forEach(function($btn){$btn.addEventListener("click",fActive);});var fCheckForm=function fCheckForm(){var $Form=document.querySelector('form.contact');var $FirstNameField=document.getElementById('first_name');var $LastNameField=document.getElementById('last_name');var $EmailField=document.getElementById('email');var $MsgField=document.getElementById('message');var $SubmitBtn=document.getElementById('submit');var regexpName=/^[a-zA-Z\u00C0-\u00FF]+['-]?[a-zA-Z\u00C0-\u00FF]+$/;var regexpEmail=/^([a-z0-9_\.-]+)@([\da-z\.-]+)\.([a-z\.]{2,6})$/;var regexpMsg=/^([a-zA-Z]{2,40} + [a-zA-Z]{2,40})$/;var fCheckAField=function fCheckAField(field,regexp){if(field.value==''){field.parentNode.querySelector('span').innerHTML="Votre champs de formulaire est vide.";field.parentNode.querySelector('span').classList.add('on');return false;}else if(regexp&&!regexp.test(field.value)){field.parentNode.querySelector('span').innerHTML="Il semble que la valeur rentré ait un problème.";field.parentNode.querySelector('span').classList.add('on');return false;}else{$SubmitBtn.removeAttribute('disabled');field.parentNode.querySelector('span').classList.remove('on');field.parentNode.querySelector('.input').classList.add('ok');return true;}};var fCheckFirstName=function fCheckFirstName(){return fCheckAField($FirstNameField,regexpName);};var fCheckLastName=function fCheckLastName(){return fCheckAField($LastNameField,regexpName);};var fCheckEmail=function fCheckEmail(){return fCheckAField($EmailField,regexpEmail);};var fCheckMessage=function fCheckMessage(){if($MsgField.value.split(/\s+/).length>=3){$MsgField.parentNode.querySelector('span').classList.remove('on');$MsgField.parentNode.querySelector('.input').classList.add('ok');return true;}if($MsgField.value.split(/\s+/).length===1){$MsgField.parentNode.querySelector('span').innerHTML="Vous n'avez pas écrit de message.";$MsgField.parentNode.querySelector('span').classList.add('on');return false;}if($MsgField.value.split(/\s+/).length<5){$MsgField.parentNode.querySelector('span').innerHTML="Vous avez pas écris un assez grand message.";$MsgField.parentNode.querySelector('span').classList.add('on');return false;}};var fCheckAll=function fCheckAll(){if(fCheckFirstName()*fCheckLastName()*fCheckEmail()*fCheckMessage()){$Form.classList.add('valid');}};$FirstNameField.addEventListener('blur',fCheckFirstName,false);$LastNameField.addEventListener('blur',fCheckLastName,false);$EmailField.addEventListener('blur',fCheckEmail,false);$MsgField.addEventListener('blur',fCheckMessage,false);$SubmitBtn.addEventListener('click',fCheckAll,false);};var fCancelAnchor=function fCancelAnchor(e){e.preventDefault();};var bullets=document.querySelectorAll('.bullets_nav');var translateValue;Array.from(bullets).forEach(function($btn){$btn.addEventListener("click",fCancelAnchor);$btn.addEventListener('click',function(){if(window.matchMedia("(max-width: 739px)").matches){var translateValue=$btn.getAttribute('data-translateValue-mobile');}else{var translateValue=$btn.getAttribute('data-translateValue-desktop');}if($btn.parentNode.querySelector('.active')){$btn.parentNode.querySelector('.active').classList.remove('active');}document.querySelector('.slider').style.transform='translateX('+translateValue+')';$btn.classList.add('active');if(document.querySelectorAll('.slider .precNext')){document.querySelectorAll('.slider .precNext')[0].classList.remove('precNext');document.querySelectorAll('.slider .precNext')[0].classList.remove('precNext');}img[$btn.getAttribute('data-prec-img')].classList.toggle('precNext');img[$btn.getAttribute('data-next-img')].classList.toggle('precNext');});});var prevNext=document.querySelectorAll('.prevNext div a');Array.from(prevNext).forEach(function($prevNext){$prevNext.addEventListener("click",fCancelAnchor);$prevNext.addEventListener("click",function(){if(window.matchMedia("(max-width: 739px)").matches){var translateValue=$prevNext.getAttribute('data-translateValue-mobile');}else{var translateValue=$prevNext.getAttribute('data-translateValue-desktop');}console.log(window.matchMedia("(max-width: 739px)").matches);console.log(translateValue);document.querySelector('.slider').style.transform='translateX('+translateValue+')';var prevNextParent=$prevNext.parentNode.parentNode;prevNextParent.childNodes[$prevNext.getAttribute('data-next')].style.visibility='visible';prevNextParent.childNodes[$prevNext.getAttribute('data-prec')].style.visibility='hidden';if(document.querySelectorAll('.slider .precNext')){document.querySelectorAll('.slider .precNext')[0].classList.remove('precNext');document.querySelectorAll('.slider .precNext')[0].classList.remove('precNext');}img[$prevNext.getAttribute('data-prec-img')].classList.toggle('precNext');img[$prevNext.getAttribute('data-next-img')].classList.toggle('precNext');var btnA=document.querySelectorAll('.bullets_nav');var btn=document.querySelector('.bullets_nav');if(document.querySelector('.bullets .active')){document.querySelector('.bullets .active').classList.remove('active');}btnA[$prevNext.getAttribute('data-focus')].classList.add('active');});});var img=document.querySelectorAll('.slider div');var fAnimInput=function fAnimInput(){var input=document.querySelectorAll('.input');var getFocus=function getFocus(oEvent){oEvent.currentTarget.parentNode.querySelector('label').classList.add("focus");var oInput=oEvent.currentTarget.parentNode.querySelector('.input');console.log(oEvent);setTimeout(function(){oInput.classList.add("border");},200);};var outFocus=function outFocus(e){if(e.currentTarget.parentNode.querySelector('.input').value.length===0||e.currentTarget.parentNode.querySelector('.input option').value.length===0){e.currentTarget.parentNode.querySelector('label').classList.remove("focus");}console.log(e.currentTarget);e.currentTarget.classList.remove("border");};Array.from(input).forEach(function($label){$label.addEventListener("focus",getFocus);$label.addEventListener("click",getFocus);$label.addEventListener("blur",outFocus);});};fAnimInput();})();
//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNjcmlwdC5qcyJdLCJuYW1lcyI6WyJ0YXJnZXREYXRlIiwiRGF0ZSIsImRheXMiLCJocnMiLCJtaW4iLCJzZWMiLCIkIiwidGltZVRvTGF1bmNoIiwibnVtYmVyVHJhbnNpdGlvbiIsInNldFRpbWVvdXQiLCJjb3VudERvd25UaW1lciIsImN1cnJlbnREYXRlIiwiZGlmZiIsIk1hdGgiLCJhYnMiLCJmbG9vciIsInRleHQiLCJpZCIsImVuZFBvaW50IiwidHJhbnNpdGlvbkR1cmF0aW9uIiwidHJhbnNpdGlvbkVhc2UiLCJudW1iZXJDb3VudCIsImFuaW1hdGUiLCJkdXJhdGlvbiIsImVhc2luZyIsInN0ZXAiLCJjb21wbGV0ZSIsImhhbWJ1cmdlciIsImRvY3VtZW50IiwicXVlcnlTZWxlY3RvciIsInNlYXJjaCIsImFkZEV2ZW50TGlzdGVuZXIiLCJlIiwic3RvcFByb3BhZ2F0aW9uIiwicHJldmVudERlZmF1bHQiLCJjbGFzc0xpc3QiLCJ0b2dnbGUiLCJib2R5IiwicGFyZW50Tm9kZSIsImJ1dHRvbnMiLCJxdWVyeVNlbGVjdG9yQWxsIiwiZkFjdGl2ZSIsInJlbW92ZSIsImN1cnJlbnRUYXJnZXQiLCJhZGQiLCJBcnJheSIsImZyb20iLCJmb3JFYWNoIiwiJGJ0biIsImZDaGVja0Zvcm0iLCIkRm9ybSIsIiRGaXJzdE5hbWVGaWVsZCIsImdldEVsZW1lbnRCeUlkIiwiJExhc3ROYW1lRmllbGQiLCIkRW1haWxGaWVsZCIsIiRNc2dGaWVsZCIsIiRTdWJtaXRCdG4iLCJyZWdleHBOYW1lIiwicmVnZXhwRW1haWwiLCJyZWdleHBNc2ciLCJmQ2hlY2tBRmllbGQiLCJmaWVsZCIsInJlZ2V4cCIsInZhbHVlIiwiaW5uZXJIVE1MIiwidGVzdCIsInJlbW92ZUF0dHJpYnV0ZSIsImZDaGVja0ZpcnN0TmFtZSIsImZDaGVja0xhc3ROYW1lIiwiZkNoZWNrRW1haWwiLCJmQ2hlY2tNZXNzYWdlIiwic3BsaXQiLCJsZW5ndGgiLCJmQ2hlY2tBbGwiLCJmQ2FuY2VsQW5jaG9yIiwiYnVsbGV0cyIsInRyYW5zbGF0ZVZhbHVlIiwid2luZG93IiwibWF0Y2hNZWRpYSIsIm1hdGNoZXMiLCJnZXRBdHRyaWJ1dGUiLCJzdHlsZSIsInRyYW5zZm9ybSIsImltZyIsInByZXZOZXh0IiwiJHByZXZOZXh0IiwiY29uc29sZSIsImxvZyIsInByZXZOZXh0UGFyZW50IiwiY2hpbGROb2RlcyIsInZpc2liaWxpdHkiLCJidG5BIiwiYnRuIiwiZkFuaW1JbnB1dCIsImlucHV0IiwiZ2V0Rm9jdXMiLCJvRXZlbnQiLCJvSW5wdXQiLCJvdXRGb2N1cyIsIiRsYWJlbCJdLCJtYXBwaW5ncyI6IjBCQUdJLEdBQUlBLFlBQWEsR0FBSUMsS0FBSixDQUFTLHFCQUFULENBQWpCLENBR0EsR0FBSUMsS0FBSixDQUNBLEdBQUlDLElBQUosQ0FDQSxHQUFJQyxJQUFKLENBQ0EsR0FBSUMsSUFBSixDQUtBQyxFQUFFLFVBQVcsQ0FFVEMsZUFFQUMsaUJBQWlCLGVBQWpCLENBQWtDTixJQUFsQyxDQUF3QyxJQUF4QyxDQUE4QyxhQUE5QyxFQUNBTSxpQkFBaUIsZ0JBQWpCLENBQW1DTCxHQUFuQyxDQUF3QyxJQUF4QyxDQUE4QyxhQUE5QyxFQUNBSyxpQkFBaUIsa0JBQWpCLENBQXFDSixHQUFyQyxDQUEwQyxJQUExQyxDQUFnRCxhQUFoRCxFQUVBSyxXQUFXQyxjQUFYLENBQTBCLElBQTFCLEVBQ0gsQ0FURCxFQWVBLFFBQVNILGFBQVQsRUFBdUIsQ0FFbkIsR0FBSUksYUFBYyxHQUFJVixLQUFKLEVBQWxCLENBR0EsR0FBSVcsTUFBTyxDQUFDRCxZQUFjWCxVQUFmLEVBQTJCLElBQXRDLENBQ0EsR0FBSVksTUFBT0MsS0FBS0MsR0FBTCxDQUFTRCxLQUFLRSxLQUFMLENBQVdILElBQVgsQ0FBVCxDQUFYLENBR0FWLEtBQU9XLEtBQUtFLEtBQUwsQ0FBV0gsTUFBTSxHQUFHLEVBQUgsQ0FBTSxFQUFaLENBQVgsQ0FBUCxDQUNBUCxJQUFNTyxLQUFPVixLQUFPLEVBQVAsQ0FBVSxFQUFWLENB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QUxELEVBTUgsQ0E5QkQsQ0ErQkFMLGEiLCJmaWxlIjoic2NyaXB0LmpzIiwic291cmNlc0NvbnRlbnQiOlsiLy8gQ291bnRkb3duIGhvbWUgcGFnZVxyXG4vKiAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLSovXHJcbi8vIFRoZSBkYXRlIHlvdSB3YW50IHRvIGNvdW50IGRvd24gdG9cclxuICAgIHZhciB0YXJnZXREYXRlID0gbmV3IERhdGUoXCIyMDE4LzA4LzE5IDE4OjAwOjAwXCIpOyAgIFxyXG5cclxuICAgIC8vIE90aGVyIGRhdGUgcmVsYXRlZCB2YXJpYWJsZXNcclxuICAgIHZhciBkYXlzO1xyXG4gICAgdmFyIGhycztcclxuICAgIHZhciBtaW47XHJcbiAgICB2YXIgc2VjO1xyXG5cclxuICAgIC8qIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXHJcbiAgICAqIE9OIERPQ1VNRU5UIExPQURcclxuICAgICogLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0gKi9cclxuICAgICQoZnVuY3Rpb24oKSB7XHJcbiAgICAgICAgLy8gQ2FsY3VsYXRlIHRpbWUgdW50aWwgbGF1bmNoIGRhdGVcclxuICAgICAgICB0aW1lVG9MYXVuY2goKTtcclxuICAgICAgICAvLyBUcmFuc2l0aW9uIHRoZSBjdXJyZW50IGNvdW50ZG93biBmcm9tIDAgXHJcbiAgICAgICAgbnVtYmVyVHJhbnNpdGlvbignI2RheXMgLm51bWJlcicsIGRheXMsIDEwMDAsICdlYXNlT3V0UXVhZCcpO1xyXG4gICAgICAgIG51bWJlclRyYW5zaXRpb24oJyNob3VycyAubnVtYmVyJywgaHJzLCAxMDAwLCAnZWFzZU91dFF1YWQnKTtcclxuICAgICAgICBudW1iZXJUcmFuc2l0aW9uKCcjbWludXRlcyAubnVtYmVyJywgbWluLCAxMDAwLCAnZWFzZU91dFF1YWQnKTtcclxuICAgICAgICAvLyBCZWdpbiBDb3VudGRvd25cclxuICAgICAgICBzZXRUaW1lb3V0KGNvdW50RG93blRpbWVyLDEwMDEpO1xyXG4gICAgfSk7XHJcblxyXG4gICAgLyogLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cclxuICAgICogRklHVVJFIE9VVCBUSEUgQU1PVU5UIE9GIFxyXG4gICAgVElNRSBMRUZUIEJFRk9SRSBMQVVOQ0hcclxuICAgICogLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0gKi9cclxuICAgIGZ1bmN0aW9uIHRpbWVUb0xhdW5jaCgpe1xyXG4gICAgICAgIC8vIEdldCB0aGUgY3VycmVudCBkYXRlXHJcbiAgICAgICAgdmFyIGN1cnJlbnREYXRlID0gbmV3IERhdGUoKTtcclxuXHJcbiAgICAgICAgLy8gRmluZCB0aGUgZGlmZmVyZW5jZSBiZXR3ZWVuIGRhdGVzXHJcbiAgICAgICAgdmFyIGRpZmYgPSAoY3VycmVudERhdGUgLSB0YXJnZXREYXRlKS8xMDAwO1xyXG4gICAgICAgIHZhciBkaWZmID0gTWF0aC5hYnMoTWF0aC5mbG9vcihkaWZmKSk7ICBcclxuXHJcbiAgICAgICAgLy8gQ2hlY2sgbnVtYmVyIG9mIGRheXMgdW50aWwgdGFyZ2V0XHJcbiAgICAgICAgZGF5cyA9IE1hdGguZmxvb3IoZGlmZi8oMjQqNjAqNjApKTtcclxuICAgICAgICBzZWMgPSBkaWZmIC0gZGF5cyAqIDI0KjYwKjYwO1xyXG5cclxuICAgICAgICAvLyBDaGVjayBudW1iZXIgb2YgaG91cnMgdW50aWwgdGFyZ2V0XHJcbiAgICAgICAgaHJzID0gTWF0aC5mbG9vcihzZWMvKDYwKjYwKSk7XHJcbiAgICAgICAgc2VjID0gc2VjIC0gaHJzICogNjAqNjA7XHJcblxyXG4gICAgICAgIC8vIENoZWNrIG51bWJlciBvZiBtaW51dGVzIHVudGlsIHRhcmdldFxyXG4gICAgICAgIG1pbiA9IE1hdGguZmxvb3Ioc2VjLyg2MCkpO1xyXG4gICAgICAgIHNlYyA9IHNlYyAtIG1pbiAqIDYwO1xyXG4gICAgfVxyXG5cclxuICAgIC8qIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXHJcbiAgICAqIERJU1BMQVkgVEhFIENVUlJFTlQgXHJcbiAgICBDT1VOVCBUTyBMQVVOQ0hcclxuICAgICogLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0gKi9cclxuICAgIGZ1bmN0aW9uIGNvdW50RG93blRpbWVyKCl7IFxyXG4gICAgICAgIFxyXG4gICAgICAgIC8vIEZpZ3VyZSBvdXQgdGhlIHRpbWUgdG8gbGF1bmNoXHJcbiAgICAgICAgdGltZVRvTGF1bmNoKCk7XHJcbiAgICAgICAgXHJcbiAgICAgICAgLy8gV3JpdGUgdG8gY291bnRkb3duIGNvbXBvbmVudFxyXG4gICAgICAgICQoIFwiI2RheXMgLm51bWJlclwiICkudGV4dChkYXlzKTtcclxuICAgICAgICAkKCBcIiNob3VycyAubnVtYmVyXCIgKS50ZXh0KGhycyk7XHJcbiAgICAgICAgJCggXCIjbWludXRlcyAubnVtYmVyXCIgKS50ZXh0KG1pbik7XHJcbiAgICAgICAgXHJcbiAgICAgICAgLy8gUmVwZWF0IHRoZSBjaGVjayBldmVyeSBzZWNvbmRcclxuICAgICAgICBzZXRUaW1lb3V0KGNvdW50RG93blRpbWVyLDEwMDApO1xyXG4gICAgfVxyXG5cclxuICAgIC8qIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXHJcbiAgICAqIFRSQU5TSVRJT04gTlVNQkVSUyBGUk9NIDBcclxuICAgIFRPIENVUlJFTlQgVElNRSBVTlRJTCBMQVVOQ0hcclxuICAgICogLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0gKi9cclxuICAgIGZ1bmN0aW9uIG51bWJlclRyYW5zaXRpb24oaWQsIGVuZFBvaW50LCB0cmFuc2l0aW9uRHVyYXRpb24sIHRyYW5zaXRpb25FYXNlKXtcclxuICAgICAgICAvLyBUcmFuc2l0aW9uIG51bWJlcnMgZnJvbSAwIHRvIHRoZSBmaW5hbCBudW1iZXJcclxuICAgICAgICAkKHtudW1iZXJDb3VudDogJChpZCkudGV4dCgpfSkuYW5pbWF0ZSh7bnVtYmVyQ291bnQ6IGVuZFBvaW50fSwge1xyXG4gICAgICAgICAgICBkdXJhdGlvbjogdHJhbnNpdGlvbkR1cmF0aW9uLFxyXG4gICAgICAgICAgICBlYXNpbmc6dHJhbnNpdGlvbkVhc2UsXHJcbiAgICAgICAgICAgIHN0ZXA6IGZ1bmN0aW9uKCkge1xyXG4gICAgICAgICAgICAgICAgJChpZCkudGV4dChNYXRoLmZsb29yKHRoaXMubnVtYmVyQ291bnQpKTtcclxuICAgICAgICAgICAgfSxcclxuICAgICAgICAgICAgY29tcGxldGU6IGZ1bmN0aW9uKCkge1xyXG4gICAgICAgICAgICAgICAgJChpZCkudGV4dCh0aGlzLm51bWJlckNvdW50KTtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgIH0pOyBcclxuICAgIH07XHJcbi8qIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tKi9cclxuLy8gR29vZ2xlIG1hcCBpbmRpdmlkdWFsXHJcbi8qIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tKi9cclxuICAgIC8vIHZhciBteUNlbnRlciA9IG5ldyBnb29nbGUubWFwcy5MYXRMbmcoYCR7bGF0fWAsIGAke2xvbmd9YCk7XHJcbiAgICAvLyBmdW5jdGlvbiBpbml0aWFsaXplKCkge1xyXG4gICAgLy8gICAgIHZhciBtYXBQcm9wID0ge1xyXG4gICAgLy8gICAgICAgICBjZW50ZXI6IG15Q2VudGVyLFxyXG4gICAgLy8gICAgICAgICB6b29tOiAxMCxcclxuICAgIC8vICAgICAgICAgbWFwVHlwZUlkOiBnb29nbGUubWFwcy5NYXBUeXBlSWQuUk9BRE1BUFxyXG4gICAgLy8gICAgIH07XHJcbiAgICAvLyAgICAgdmFyIG1hcCA9IG5ldyBnb29nbGUubWFwcy5NYXAoZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoXCJtYXBcIiksIG1hcFByb3ApO1xyXG4gICAgLy8gICAgIHZhciBtYXJrZXIgPSBuZXcgZ29vZ2xlLm1hcHMuTWFya2VyKHtcclxuICAgIC8vICAgICAgICAgcG9zaXRpb246IG15Q2VudGVyLFxyXG4gICAgLy8gICAgIH0pO1xyXG4gICAgLy8gICAgIG1hcmtlci5zZXRNYXAobWFwKTtcclxuICAgIC8vIH1cclxuICAgIC8vIGdvb2dsZS5tYXBzLmV2ZW50LmFkZERvbUxpc3RlbmVyKHdpbmRvdywgJ2xvYWQnLCBpbml0aWFsaXplKTtcclxuLyogLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0qL1xyXG4vLyBIYW1idXJnZXIgbWVudSBhbmQgc2lkZWJhclxyXG4vKiAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLSovXHJcbiAgICBjb25zdCBoYW1idXJnZXIgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCcuaGFtYnVyZ2VyJyk7XHJcbiAgICBjb25zdCBzZWFyY2ggPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCcuc2VhcmNoLWljb24nKVxyXG5cclxuICAgIGhhbWJ1cmdlci5hZGRFdmVudExpc3RlbmVyKCdjbGljaycsIGZ1bmN0aW9uKGUpIHtcclxuICAgICAgICBlLnN0b3BQcm9wYWdhdGlvbigpXHJcbiAgICAgICAgZS5wcmV2ZW50RGVmYXVsdCgpXHJcbiAgICAgICAgaGFtYnVyZ2VyLmNsYXNzTGlzdC50b2dnbGUoJ2lzLWFjdGl2ZScpXHJcbiAgICAgICAgZG9jdW1lbnQuYm9keS5jbGFzc0xpc3QudG9nZ2xlKCdoYXMtc2lkZWJhcicpXHJcbiAgICB9KTtcclxuXHJcbiAgICBzZWFyY2guYWRkRXZlbnRMaXN0ZW5lcignY2xpY2snLCBmdW5jdGlvbihlKSB7XHJcbiAgICAgICAgZS5zdG9wUHJvcGFnYXRpb24oKVxyXG4gICAgICAgIGUucHJldmVudERlZmF1bHQoKVxyXG4gICAgICAgIHNlYXJjaC5jbGFzc0xpc3QudG9nZ2xlKCdvcGVuJylcclxuICAgICAgICBzZWFyY2gucGFyZW50Tm9kZS5jbGFzc0xpc3QudG9nZ2xlKCdvcGVuJyk7XHJcbiAgICB9KTtcclxuLyogLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0qL1xyXG4vLyBFdmVudCBtZW51XHJcbi8qIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tKi9cclxuICAgIGNvbnN0IGJ1dHRvbnMgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yQWxsKCcucHJvZ3JhbV9fbmF2aWdhdGlvbiAuZGF5IGEnKTtcclxuXHJcbiAgICBcclxuICAgIGZ1bmN0aW9uIGZBY3RpdmUoZSkge1xyXG4gICAgICAgIGUuc3RvcFByb3BhZ2F0aW9uKCk7XHJcbiAgICAgICAgaWYgKGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJy5wcm9ncmFtX19uYXZpZ2F0aW9uIC5kYXkgYS5hY3RpdmUnKSkge1xyXG4gICAgICAgICAgICBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCcucHJvZ3JhbV9fbmF2aWdhdGlvbiAuZGF5IGEuYWN0aXZlJykuY2xhc3NMaXN0LnJlbW92ZSgnYWN0aXZlJyk7XHJcbiAgICAgICAgICAgIGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJy5wcm9ncmFtIC50aW1lbGluZS5hbGwjYWxsJykuY2xhc3NMaXN0LnJlbW92ZSgnaGVyZScpO1xyXG4gICAgICAgICAgICBcclxuICAgICAgICB9XHJcbiAgICAgICAgZS5jdXJyZW50VGFyZ2V0LmNsYXNzTGlzdC5hZGQoJ2FjdGl2ZScpO1xyXG4gICAgfTtcclxuICAgIEFycmF5LmZyb20oYnV0dG9ucykuZm9yRWFjaChmdW5jdGlvbigkYnRuKSB7XHJcbiAgICAgICAgJGJ0bi5hZGRFdmVudExpc3RlbmVyKFwiY2xpY2tcIiwgZkFjdGl2ZSk7XHJcbiAgICB9KTtcclxuLyogLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0qL1xyXG4vLyBGb3JtIGNvbnRhY3QgZmVlZGJhY2sgYW5kIGZvY3VzXHJcbi8qIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tKi9cclxuICAgIHZhciBmQ2hlY2tGb3JtID0gZnVuY3Rpb24gZkNoZWNrRm9ybSgpIHtcclxuICAgICAgICB2YXIgJEZvcm0gPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCdmb3JtLmNvbnRhY3QnKTtcclxuICAgICAgICB2YXIgJEZpcnN0TmFtZUZpZWxkID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoJ2ZpcnN0X25hbWUnKTtcclxuICAgICAgICB2YXIgJExhc3ROYW1lRmllbGQgPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgnbGFzdF9uYW1lJyk7XHJcbiAgICAgICAgdmFyICRFbWFpbEZpZWxkID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoJ2VtYWlsJyk7XHJcbiAgICAgICAgdmFyICRNc2dGaWVsZCA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCdtZXNzYWdlJyk7XHJcbiAgICAgICAgdmFyICRTdWJtaXRCdG4gPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgnc3VibWl0Jyk7XHJcbiAgICAgICAgdmFyIHJlZ2V4cE5hbWUgPSAvXlthLXpBLVpcXHUwMEMwLVxcdTAwRkZdK1snLV0/W2EtekEtWlxcdTAwQzAtXFx1MDBGRl0rJC87XHJcbiAgICAgICAgdmFyIHJlZ2V4cEVtYWlsID0gL14oW2EtejAtOV9cXC4tXSspQChbXFxkYS16XFwuLV0rKVxcLihbYS16XFwuXXsyLDZ9KSQvO1xyXG4gICAgICAgIHZhciByZWdleHBNc2cgPSAvXihbYS16QS1aXXsyLDQwfSArIFthLXpBLVpdezIsNDB9KSQvO1xyXG4gICAgICAgIHZhciBmQ2hlY2tBRmllbGQgPSBmdW5jdGlvbiBmQ2hlY2tBRmllbGQoZmllbGQsIHJlZ2V4cCkge1xyXG4gICAgICAgICAgICBpZiAoZmllbGQudmFsdWUgPT0gJycpIHtcclxuICAgICAgICAgICAgICAgIGZpZWxkLnBhcmVudE5vZGUucXVlcnlTZWxlY3Rvcignc3BhbicpLmlubmVySFRNTCA9IFwiVm90cmUgY2hhbXBzIGRlIGZvcm11bGFpcmUgZXN0IHZpZGUuXCI7XHJcbiAgICAgICAgICAgICAgICBmaWVsZC5wYXJlbnROb2RlLnF1ZXJ5U2VsZWN0b3IoJ3NwYW4nKS5jbGFzc0xpc3QuYWRkKCdvbicpO1xyXG4gICAgICAgICAgICAgICAgcmV0dXJuIGZhbHNlO1xyXG4gICAgICAgICAgICB9IGVsc2UgaWYgKHJlZ2V4cCAmJiAhcmVnZXhwLnRlc3QoZmllbGQudmFsdWUpKSB7XHJcbiAgICAgICAgICAgICAgICBmaWVsZC5wYXJlbnROb2RlLnF1ZXJ5U2VsZWN0b3IoJ3NwYW4nKS5pbm5lckhUTUwgPSBcIklsIHNlbWJsZSBxdWUgbGEgdmFsZXVyIHJlbnRyw6kgYWl0IHVuIHByb2Jsw6htZS5cIjtcclxuICAgICAgICAgICAgICAgIGZpZWxkLnBhcmVudE5vZGUucXVlcnlTZWxlY3Rvcignc3BhbicpLmNsYXNzTGlzdC5hZGQoJ29uJyk7XHJcbiAgICAgICAgICAgICAgICByZXR1cm4gZmFsc2U7XHJcbiAgICAgICAgICAgIH0gZWxzZSB7XHJcbiAgICAgICAgICAgICAgICAkU3VibWl0QnRuLnJlbW92ZUF0dHJpYnV0ZSgnZGlzYWJsZWQnKTtcclxuICAgICAgICAgICAgICAgIGZpZWxkLnBhcmVudE5vZGUucXVlcnlTZWxlY3Rvcignc3BhbicpLmNsYXNzTGlzdC5yZW1vdmUoJ29uJyk7XHJcbiAgICAgICAgICAgICAgICBmaWVsZC5wYXJlbnROb2RlLnF1ZXJ5U2VsZWN0b3IoJy5pbnB1dCcpLmNsYXNzTGlzdC5hZGQoJ29rJyk7XHJcbiAgICAgICAgICAgICAgICByZXR1cm4gdHJ1ZTtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgIH07XHJcbiAgICAgICAgdmFyIGZDaGVja0ZpcnN0TmFtZSA9IGZ1bmN0aW9uIGZDaGVja0ZpcnN0TmFtZSgpIHtcclxuICAgICAgICAgICAgcmV0dXJuIGZDaGVja0FGaWVsZCgkRmlyc3ROYW1lRmllbGQsIHJlZ2V4cE5hbWUpO1xyXG4gICAgICAgIH07XHJcbiAgICAgICAgdmFyIGZDaGVja0xhc3ROYW1lID0gZnVuY3Rpb24gZkNoZWNrTGFzdE5hbWUoKSB7XHJcbiAgICAgICAgICAgIHJldHVybiBmQ2hlY2tBRmllbGQoJExhc3ROYW1lRmllbGQsIHJlZ2V4cE5hbWUpO1xyXG4gICAgICAgIH07XHJcbiAgICAgICAgdmFyIGZDaGVja0VtYWlsID0gZnVuY3Rpb24gZkNoZWNrRW1haWwoKSB7XHJcbiAgICAgICAgICAgIHJldHVybiBmQ2hlY2tBRmllbGQoJEVtYWlsRmllbGQsIHJlZ2V4cEVtYWlsKTtcclxuICAgICAgICB9O1xyXG4gICAgICAgIHZhciBmQ2hlY2tNZXNzYWdlID0gZnVuY3Rpb24gZkNoZWNrTWVzc2FnZSgpIHtcclxuICAgICAgICAgICAgaWYgKCRNc2dGaWVsZC52YWx1ZS5zcGxpdCgvXFxzKy8pLmxlbmd0aCA+PSAzKSB7XHJcbiAgICAgICAgICAgICAgICAkTXNnRmllbGQucGFyZW50Tm9kZS5xdWVyeVNlbGVjdG9yKCdzcGFuJykuY2xhc3NMaXN0LnJlbW92ZSgnb24nKTtcclxuICAgICAgICAgICAgICAgICRNc2dGaWVsZC5wYXJlbnROb2RlLnF1ZXJ5U2VsZWN0b3IoJy5pbnB1dCcpLmNsYXNzTGlzdC5hZGQoJ29rJyk7XHJcbiAgICAgICAgICAgICAgICByZXR1cm4gdHJ1ZTtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICBpZiAoJE1zZ0ZpZWxkLnZhbHVlLnNwbGl0KC9cXHMrLykubGVuZ3RoID09PSAxKSB7XHJcbiAgICAgICAgICAgICAgICAkTXNnRmllbGQucGFyZW50Tm9kZS5xdWVyeVNlbGVjdG9yKCdzcGFuJykuaW5uZXJIVE1MID0gXCJWb3VzIG4nYXZleiBwYXMgw6ljcml0IGRlIG1lc3NhZ2UuXCI7XHJcbiAgICAgICAgICAgICAgICAkTXNnRmllbGQucGFyZW50Tm9kZS5xdWVyeVNlbGVjdG9yKCdzcGFuJykuY2xhc3NMaXN0LmFkZCgnb24nKTtcclxuICAgICAgICAgICAgICAgIHJldHVybiBmYWxzZTtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICBpZiAoJE1zZ0ZpZWxkLnZhbHVlLnNwbGl0KC9cXHMrLykubGVuZ3RoIDwgNSkge1xyXG4gICAgICAgICAgICAgICAgJE1zZ0ZpZWxkLnBhcmVudE5vZGUucXVlcnlTZWxlY3Rvcignc3BhbicpLmlubmVySFRNTCA9IFwiVm91cyBhdmV6IHBhcyDDqWNyaXMgdW4gYXNzZXogZ3JhbmQgbWVzc2FnZS5cIjtcclxuICAgICAgICAgICAgICAgICRNc2dGaWVsZC5wYXJlbnROb2RlLnF1ZXJ5U2VsZWN0b3IoJ3NwYW4nKS5jbGFzc0xpc3QuYWRkKCdvbicpO1xyXG4gICAgICAgICAgICAgICAgcmV0dXJuIGZhbHNlO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgfTtcclxuICAgICAgICB2YXIgZkNoZWNrQWxsID0gZnVuY3Rpb24gZkNoZWNrQWxsKCkge1xyXG4gICAgICAgICAgICBpZiAoZkNoZWNrRmlyc3ROYW1lKCkgKiBmQ2hlY2tMYXN0TmFtZSgpICogZkNoZWNrRW1haWwoKSAqIGZDaGVja01lc3NhZ2UoKSApIHtcclxuICAgICAgICAgICAgICAgICRGb3JtLmNsYXNzTGlzdC5hZGQoJ3ZhbGlkJyk7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICB9O1xyXG5cclxuICAgICAgICAkRmlyc3ROYW1lRmllbGQuYWRkRXZlbnRMaXN0ZW5lcignYmx1cicsIGZDaGVja0ZpcnN0TmFtZSwgZmFsc2UpO1xyXG4gICAgICAgICRMYXN0TmFtZUZpZWxkLmFkZEV2ZW50TGlzdGVuZXIoJ2JsdXInLCBmQ2hlY2tMYXN0TmFtZSwgZmFsc2UpO1xyXG4gICAgICAgICRFbWFpbEZpZWxkLmFkZEV2ZW50TGlzdGVuZXIoJ2JsdXInLCBmQ2hlY2tFbWFpbCwgZmFsc2UpO1xyXG4gICAgICAgICRNc2dGaWVsZC5hZGRFdmVudExpc3RlbmVyKCdibHVyJywgZkNoZWNrTWVzc2FnZSwgZmFsc2UpO1xyXG4gICAgICAgICRTdWJtaXRCdG4uYWRkRXZlbnRMaXN0ZW5lcignY2xpY2snLCBmQ2hlY2tBbGwsIGZhbHNlKTtcclxuXHJcbiAgICAgICAgLy8gdmFyIGlucHV0ID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvckFsbCgnLmlucHV0Jyk7XHJcblxyXG4gICAgICAgIC8vIHZhciBnZXRGb2N1cyA9IGZ1bmN0aW9uIGdldEZvY3VzKG9FdmVudCkge1xyXG4gICAgICAgIC8vICAgICBvRXZlbnQuY3VycmVudFRhcmdldC5wYXJlbnROb2RlLnF1ZXJ5U2VsZWN0b3IoJ2xhYmVsJykuY2xhc3NMaXN0LmFkZChcImZvY3VzXCIpO1xyXG4gICAgICAgIC8vICAgICB2YXIgb0lucHV0ID0gIG9FdmVudC5jdXJyZW50VGFyZ2V0LnBhcmVudE5vZGUucXVlcnlTZWxlY3RvcignLmlucHV0Jyk7XHJcbiAgICAgICAgLy8gICAgIHNldFRpbWVvdXQoZnVuY3Rpb24oKXtcclxuICAgICAgICAvLyAgICAgICAgIGNvbnNvbGUubG9nKClcclxuICAgICAgICAvLyAgICAgICAgIG9JbnB1dC5jbGFzc0xpc3QuYWRkKFwiYm9yZGVyXCIpO1xyXG4gICAgICAgICAgICAgICAgXHJcbiAgICAgICAgLy8gICAgICAgICB9LDIwMCk7XHJcbiAgICAgICAgICAgIFxyXG4gICAgICAgIC8vIH07XHJcblxyXG4gICAgICAgICBcclxuXHJcbiAgICAgICAgLy8gdmFyIG91dEZvY3VzID0gZnVuY3Rpb24gb3V0Rm9jdXMoZSkge1xyXG4gICAgICAgIC8vICAgICBpZiAoZS5jdXJyZW50VGFyZ2V0LnBhcmVudE5vZGUucXVlcnlTZWxlY3RvcignLmlucHV0JykudmFsdWUubGVuZ3RoID09PSAwIHx8IGUuY3VycmVudFRhcmdldC5wYXJlbnROb2RlLnF1ZXJ5U2VsZWN0b3IoJy5pbnB1dCBvcHRpb24nKS52YWx1ZS5sZW5ndGggPT09IDAgKSB7XHJcbiAgICAgICAgLy8gICAgICAgICBlLmN1cnJlbnRUYXJnZXQucGFyZW50Tm9kZS5xdWVyeVNlbGVjdG9yKCdsYWJlbCcpLmNsYXNzTGlzdC5yZW1vdmUoXCJmb2N1c1wiKTtcclxuICAgICAgICAvLyAgICAgfVxyXG4gICAgICAgIC8vICAgICBjb25zb2xlLmxvZyhlLmN1cnJlbnRUYXJnZXQpXHJcbiAgICAgICAgLy8gICAgIGUuY3VycmVudFRhcmdldC5jbGFzc0xpc3QucmVtb3ZlKFwiYm9yZGVyXCIpO1xyXG4gICAgICAgICAgICBcclxuICAgICAgICAvLyB9O1xyXG4gICAgICAgIC8vIEFycmF5LmZyb20oaW5wdXQpLmZvckVhY2goZnVuY3Rpb24oJGxhYmVsKSB7XHJcbiAgICAgICAgLy8gICAgICRsYWJlbC5hZGRFdmVudExpc3RlbmVyKFwiZm9jdXNcIiwgZ2V0Rm9jdXMpO1xyXG4gICAgICAgIC8vICAgICAkbGFiZWwuYWRkRXZlbnRMaXN0ZW5lcihcImNsaWNrXCIsIGdldEZvY3VzKTtcclxuICAgICAgICAvLyAgICAgJGxhYmVsLmFkZEV2ZW50TGlzdGVuZXIoXCJibHVyXCIsIG91dEZvY3VzKTtcclxuXHJcbiAgICAgICAgLy8gfSk7XHJcbiAgICB9O1xyXG4gICAgLy9mQ2hlY2tGb3JtKCk7XHJcbi8qIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tKi9cclxuLy8gSlMgU2xpZGVyXHJcbi8qIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tKi9cclxuXHJcblxyXG4gICAgY29uc3QgZkNhbmNlbEFuY2hvciA9IGZ1bmN0aW9uKGUpe1xyXG4gICAgICAgIGUucHJldmVudERlZmF1bHQoKTtcclxuICAgIH1cclxuXHJcbiAgICBjb25zdCBidWxsZXRzID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvckFsbCgnLmJ1bGxldHNfbmF2Jyk7XHJcbiAgICB2YXIgdHJhbnNsYXRlVmFsdWU7XHJcbiAgICBBcnJheS5mcm9tKGJ1bGxldHMpLmZvckVhY2goZnVuY3Rpb24oJGJ0bikge1xyXG4gICAgICAgICRidG4uYWRkRXZlbnRMaXN0ZW5lcihcImNsaWNrXCIsIGZDYW5jZWxBbmNob3IpO1xyXG4gICAgICAgIFxyXG4gICAgICAgIFxyXG4gICAgICAgICRidG4uYWRkRXZlbnRMaXN0ZW5lcignY2xpY2snLCAoKSA9PntcclxuXHJcbiAgICAgICAgICAgIGlmKCB3aW5kb3cubWF0Y2hNZWRpYSggXCIobWF4LXdpZHRoOiA3MzlweClcIiApLm1hdGNoZXMgKXtcclxuICAgICAgICAgICAgICAgIHZhciB0cmFuc2xhdGVWYWx1ZSA9ICRidG4uZ2V0QXR0cmlidXRlKCdkYXRhLXRyYW5zbGF0ZVZhbHVlLW1vYmlsZScpO1xyXG4gICAgICAgICAgICB9IGVsc2V7XHJcbiAgICAgICAgICAgICAgICB2YXIgdHJhbnNsYXRlVmFsdWUgPSAkYnRuLmdldEF0dHJpYnV0ZSgnZGF0YS10cmFuc2xhdGVWYWx1ZS1kZXNrdG9wJyk7XHJcbiAgICBcclxuICAgICAgICAgICAgfVxyXG5cclxuICAgICAgICAgICAgLy8gUmVtb3ZlIGNsYXNzIGFjdGl2ZSBmcm9tIHByZWMgZm9jdXNcclxuICAgICAgICAgICAgaWYoICRidG4ucGFyZW50Tm9kZS5xdWVyeVNlbGVjdG9yKCcuYWN0aXZlJykgKXtcclxuICAgICAgICAgICAgICAgICRidG4ucGFyZW50Tm9kZS5xdWVyeVNlbGVjdG9yKCcuYWN0aXZlJykuY2xhc3NMaXN0LnJlbW92ZSgnYWN0aXZlJyk7XHJcbiAgICAgICAgICAgIH1cclxuXHJcbiAgICAgICAgICAgIC8vIE1ha2UgdHJhbnNsYXRlWCBhbmltYXRpb24gb2Ygc2xpZGVyXHJcbiAgICAgICAgICAgIGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJy5zbGlkZXInKS5zdHlsZS50cmFuc2Zvcm0gPSBgdHJhbnNsYXRlWCgke3RyYW5zbGF0ZVZhbHVlfSlgO1xyXG5cclxuICAgICAgICAgICAgLy8gQWRkIGNsYXNzIGFjdGl2ZSBmcm9tIGFjdHVhbCBmb2N1c1xyXG4gICAgICAgICAgICAkYnRuLmNsYXNzTGlzdC5hZGQoJ2FjdGl2ZScpO1xyXG5cclxuICAgICAgICAgICAgLy8gQ2hhbmdlIG9wYWNpdHkgb2YgcHJlYy9uZXh0IGltYWdlXHJcbiAgICAgICAgICAgIGlmKCBkb2N1bWVudC5xdWVyeVNlbGVjdG9yQWxsKCcuc2xpZGVyIC5wcmVjTmV4dCcpICl7XHJcbiAgICAgICAgICAgICAgICBkb2N1bWVudC5xdWVyeVNlbGVjdG9yQWxsKCcuc2xpZGVyIC5wcmVjTmV4dCcpWzBdLmNsYXNzTGlzdC5yZW1vdmUoJ3ByZWNOZXh0Jyk7XHJcbiAgICAgICAgICAgICAgICBkb2N1bWVudC5xdWVyeVNlbGVjdG9yQWxsKCcuc2xpZGVyIC5wcmVjTmV4dCcpWzBdLmNsYXNzTGlzdC5yZW1vdmUoJ3ByZWNOZXh0Jyk7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgaW1nWyRidG4uZ2V0QXR0cmlidXRlKCdkYXRhLXByZWMtaW1nJyldLmNsYXNzTGlzdC50b2dnbGUoJ3ByZWNOZXh0Jyk7XHJcbiAgICAgICAgICAgIGltZ1skYnRuLmdldEF0dHJpYnV0ZSgnZGF0YS1uZXh0LWltZycpXS5jbGFzc0xpc3QudG9nZ2xlKCdwcmVjTmV4dCcpO1xyXG4gICAgICAgIH0pO1xyXG4gICAgfSk7XHJcbiAgICBcclxuICAgIGNvbnN0IHByZXZOZXh0ID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvckFsbCgnLnByZXZOZXh0IGRpdiBhJyk7XHJcblxyXG4gICAgQXJyYXkuZnJvbShwcmV2TmV4dCkuZm9yRWFjaChmdW5jdGlvbigkcHJldk5leHQpIHtcclxuICAgICAgICAkcHJldk5leHQuYWRkRXZlbnRMaXN0ZW5lcihcImNsaWNrXCIsIGZDYW5jZWxBbmNob3IpO1xyXG4gICAgICAgIFxyXG4gICAgICAgIFxyXG4gICAgICAgICRwcmV2TmV4dC5hZGRFdmVudExpc3RlbmVyKFwiY2xpY2tcIiwgKCkgPT57XHJcbiAgICAgICAgICAgIFxyXG4gICAgICAgICAgICBpZiggd2luZG93Lm1hdGNoTWVkaWEoIFwiKG1heC13aWR0aDogNzM5cHgpXCIgKS5tYXRjaGVzICl7XHJcbiAgICAgICAgICAgICAgICAgdmFyIHRyYW5zbGF0ZVZhbHVlID0gJHByZXZOZXh0LmdldEF0dHJpYnV0ZSgnZGF0YS10cmFuc2xhdGVWYWx1ZS1tb2JpbGUnKTtcclxuICAgICAgICAgICAgfWVsc2V7XHJcbiAgICAgICAgICAgICAgICAgdmFyIHRyYW5zbGF0ZVZhbHVlID0gJHByZXZOZXh0LmdldEF0dHJpYnV0ZSgnZGF0YS10cmFuc2xhdGVWYWx1ZS1kZXNrdG9wJyk7XHJcbiAgICBcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICBjb25zb2xlLmxvZyh3aW5kb3cubWF0Y2hNZWRpYSggXCIobWF4LXdpZHRoOiA3MzlweClcIiApLm1hdGNoZXMgKTtcclxuICAgICAgICAgICAgY29uc29sZS5sb2codHJhbnNsYXRlVmFsdWUpO1xyXG4gICAgICAgICAgICAvLyBNYWtlIHRyYW5zbGF0ZVggYW5pbWF0aW9uIG9mIHNsaWRlclxyXG4gICAgICAgICAgICBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCcuc2xpZGVyJykuc3R5bGUudHJhbnNmb3JtID0gYHRyYW5zbGF0ZVgoJHt0cmFuc2xhdGVWYWx1ZX0pYDtcclxuXHJcbiAgICAgICAgICAgIC8vIENyZWF0ZSB2YXJpYWJsZSBmb3IgdGhlIHBhcmVudFxyXG4gICAgICAgICAgICBjb25zdCBwcmV2TmV4dFBhcmVudCA9ICRwcmV2TmV4dC5wYXJlbnROb2RlLnBhcmVudE5vZGU7XHJcblxyXG4gICAgICAgICAgICAvLyBBZGQgdmlzaWJsZS9oaWRkZW4gc3R5bGUgZm9yIHRoZSBuZXh0UHJlYyBidXR0b25cclxuICAgICAgICAgICAgcHJldk5leHRQYXJlbnQuY2hpbGROb2Rlc1skcHJldk5leHQuZ2V0QXR0cmlidXRlKCdkYXRhLW5leHQnKV0uc3R5bGUudmlzaWJpbGl0eSA9ICd2aXNpYmxlJztcclxuICAgICAgICAgICAgcHJldk5leHRQYXJlbnQuY2hpbGROb2Rlc1skcHJldk5leHQuZ2V0QXR0cmlidXRlKCdkYXRhLXByZWMnKV0uc3R5bGUudmlzaWJpbGl0eSA9ICdoaWRkZW4nO1xyXG4gICAgICAgICAgICBcclxuICAgICAgICAgICAgLy8gQ2hhbmdlIG9wYWNpdHkgb2YgcHJlYy9uZXh0IGltYWdlXHJcbiAgICAgICAgICAgIGlmKCBkb2N1bWVudC5xdWVyeVNlbGVjdG9yQWxsKCcuc2xpZGVyIC5wcmVjTmV4dCcpICl7XHJcbiAgICAgICAgICAgICAgICBkb2N1bWVudC5xdWVyeVNlbGVjdG9yQWxsKCcuc2xpZGVyIC5wcmVjTmV4dCcpWzBdLmNsYXNzTGlzdC5yZW1vdmUoJ3ByZWNOZXh0Jyk7XHJcbiAgICAgICAgICAgICAgICBkb2N1bWVudC5xdWVyeVNlbGVjdG9yQWxsKCcuc2xpZGVyIC5wcmVjTmV4dCcpWzBdLmNsYXNzTGlzdC5yZW1vdmUoJ3ByZWNOZXh0Jyk7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgaW1nWyRwcmV2TmV4dC5nZXRBdHRyaWJ1dGUoJ2RhdGEtcHJlYy1pbWcnKV0uY2xhc3NMaXN0LnRvZ2dsZSgncHJlY05leHQnKTtcclxuICAgICAgICAgICAgaW1nWyRwcmV2TmV4dC5nZXRBdHRyaWJ1dGUoJ2RhdGEtbmV4dC1pbWcnKV0uY2xhc3NMaXN0LnRvZ2dsZSgncHJlY05leHQnKTtcclxuXHJcbiAgICAgICAgICAgIC8vIFJlbW92ZSBjbGFzcyBhY3RpdmUgZnJvbSBidWxsZXRzIHByZWMgZm9jdXNcclxuICAgICAgICAgICAgY29uc3QgYnRuQSA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3JBbGwoJy5idWxsZXRzX25hdicpO1xyXG4gICAgICAgICAgICBjb25zdCBidG4gPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCcuYnVsbGV0c19uYXYnKTtcclxuICAgICAgICAgICAgaWYoIGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJy5idWxsZXRzIC5hY3RpdmUnKSApe1xyXG4gICAgICAgICAgICAgICAgZG9jdW1lbnQucXVlcnlTZWxlY3RvcignLmJ1bGxldHMgLmFjdGl2ZScpLmNsYXNzTGlzdC5yZW1vdmUoJ2FjdGl2ZScpO1xyXG4gICAgICAgICAgICB9XHJcblxyXG4gICAgICAgICAgICAvLyBBZGQgY2xhc3MgYWN0aXZlIGZyb20gYWN0dWFsIGZvY3VzXHJcbiAgICAgICAgICAgIGJ0bkFbICRwcmV2TmV4dC5nZXRBdHRyaWJ1dGUoJ2RhdGEtZm9jdXMnKSBdLmNsYXNzTGlzdC5hZGQoJ2FjdGl2ZScpO1xyXG4gICAgICAgIH0pO1xyXG4gICAgfSk7XHJcblxyXG4gICAgY29uc3QgaW1nID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvckFsbCgnLnNsaWRlciBkaXYnKTtcclxuLyogLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0qL1xyXG4vLyBJbnB1dCBBbmltXHJcbi8qIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tKi9cclxuICAgIHZhciBmQW5pbUlucHV0ID0gZnVuY3Rpb24gZkFuaW1JbnB1dCgpIHtcclxuICAgICAgICB2YXIgaW5wdXQgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yQWxsKCcuaW5wdXQnKTtcclxuXHJcbiAgICAgICAgdmFyIGdldEZvY3VzID0gZnVuY3Rpb24gZ2V0Rm9jdXMob0V2ZW50KSB7XHJcbiAgICAgICAgICAgIG9FdmVudC5jdXJyZW50VGFyZ2V0LnBhcmVudE5vZGUucXVlcnlTZWxlY3RvcignbGFiZWwnKS5jbGFzc0xpc3QuYWRkKFwiZm9jdXNcIik7XHJcbiAgICAgICAgICAgIHZhciBvSW5wdXQgPSAgb0V2ZW50LmN1cnJlbnRUYXJnZXQucGFyZW50Tm9kZS5xdWVyeVNlbGVjdG9yKCcuaW5wdXQnKTtcclxuICAgICAgICAgICAgY29uc29sZS5sb2cob0V2ZW50KVxyXG4gICAgICAgICAgICBzZXRUaW1lb3V0KGZ1bmN0aW9uKCl7XHJcbiAgICAgICAgICAgICAgICBvSW5wdXQuY2xhc3NMaXN0LmFkZChcImJvcmRlclwiKTtcclxuICAgICAgICAgICAgICAgIFxyXG4gICAgICAgICAgICAgICAgfSwyMDApO1xyXG4gICAgICAgICAgICBcclxuICAgICAgICB9O1xyXG5cclxuICAgICAgICAgXHJcblxyXG4gICAgICAgIHZhciBvdXRGb2N1cyA9IGZ1bmN0aW9uIG91dEZvY3VzKGUpIHtcclxuICAgICAgICAgICAgaWYgKGUuY3VycmVudFRhcmdldC5wYXJlbnROb2RlLnF1ZXJ5U2VsZWN0b3IoJy5pbnB1dCcpLnZhbHVlLmxlbmd0aCA9PT0gMCB8fCBlLmN1cnJlbnRUYXJnZXQucGFyZW50Tm9kZS5xdWVyeVNlbGVjdG9yKCcuaW5wdXQgb3B0aW9uJykudmFsdWUubGVuZ3RoID09PSAwICkge1xyXG4gICAgICAgICAgICAgICAgZS5jdXJyZW50VGFyZ2V0LnBhcmVudE5vZGUucXVlcnlTZWxlY3RvcignbGFiZWwnKS5jbGFzc0xpc3QucmVtb3ZlKFwiZm9jdXNcIik7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgY29uc29sZS5sb2coZS5jdXJyZW50VGFyZ2V0KVxyXG4gICAgICAgICAgICBlLmN1cnJlbnRUYXJnZXQuY2xhc3NMaXN0LnJlbW92ZShcImJvcmRlclwiKTtcclxuICAgICAgICAgICAgXHJcbiAgICAgICAgfTtcclxuICAgICAgICBBcnJheS5mcm9tKGlucHV0KS5mb3JFYWNoKGZ1bmN0aW9uKCRsYWJlbCkge1xyXG4gICAgICAgICAgICAkbGFiZWwuYWRkRXZlbnRMaXN0ZW5lcihcImZvY3VzXCIsIGdldEZvY3VzKTtcclxuICAgICAgICAgICAgJGxhYmVsLmFkZEV2ZW50TGlzdGVuZXIoXCJjbGlja1wiLCBnZXRGb2N1cyk7XHJcbiAgICAgICAgICAgICRsYWJlbC5hZGRFdmVudExpc3RlbmVyKFwiYmx1clwiLCBvdXRGb2N1cyk7XHJcblxyXG4gICAgICAgIH0pO1xyXG4gICAgfTtcclxuICAgIGZBbmltSW5wdXQoKTtcclxuLyogLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0qL1xyXG4vLyBCdXR0b24gQW5pbVxyXG4vKiAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLSovXHJcbi8vIGNvbnN0IGJ0bkFuaW0gPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yQWxsKCcuYnRuLS1hbmltJyk7XHJcblxyXG4vLyB2YXIgcHNldWRvQnRuID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcignLmJ0bi0tYW5pbScpO1xyXG5cclxuLy8gdmFyIHBzZXVkb0JlZm9yZUNvbnRlbnQgPSB3aW5kb3cuZ2V0Q29tcHV0ZWRTdHlsZShwc2V1ZG9CdG4sICc6YmVmb3JlJykuY29udGVudDsgLy8gUmV0dXJucyAoc3RyaW5nKSBcIjcwcHhcIlxyXG4vLyBmdW5jdGlvbiBmQWRkQ29udGVudChvKXtcclxuLy8gICAgIGRvY3VtZW50LnN0eWxlU2hlZXRzWzBdLmFkZFJ1bGUoJy5idG4tLWFuaW06OmJlZm9yZScsIGBjb250ZW50OiAnJ2ApO1xyXG4vLyAgICAgdmFyIHRleHQgPSBvLnRhcmdldC5jaGlsZE5vZGVzWzBdLmRhdGE7XHJcbi8vICAgICBkb2N1bWVudC5zdHlsZVNoZWV0c1swXS5hZGRSdWxlKCcuYnRuLS1hbmltOjpiZWZvcmUnLCBgY29udGVudDogJyR7dGV4dH0nYCk7XHJcbi8vICAgICBjb25zb2xlLmxvZyh0ZXh0KVxyXG4vLyB9XHJcbi8vICAgICAgICAgQXJyYXkuZnJvbShidG5BbmltKS5mb3JFYWNoKGZ1bmN0aW9uKCRidG4pIHtcclxuLy8gICAgICAgICAgICAgJGJ0bi5hZGRFdmVudExpc3RlbmVyKFwibW91c2VvdmVyXCIsIGZBZGRDb250ZW50KTtcclxuICAgICAgICBcclxuLy8gICAgICAgICB9KTtcclxuLy8gZkFkZENvbnRlbnQoKTtcclxuIl19
