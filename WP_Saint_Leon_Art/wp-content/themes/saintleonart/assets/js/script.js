;(function(){'use strict';var pageTitle=document.head.getElementsByTagName('title')[0].innerText;if(pageTitle==='Bienvenue - Saint-Léon\'Art'){var timeToLaunch=function timeToLaunch(){var currentDate=new Date();var diff=(currentDate-targetDate)/1000;var diff=Math.abs(Math.floor(diff));days=Math.floor(diff/(24*60*60));sec=diff-days*24*60*60;hrs=Math.floor(sec/(60*60));sec=sec-hrs*60*60;min=Math.floor(sec/60);sec=sec-min*60;};var countDownTimer=function countDownTimer(){timeToLaunch();$("#days .number").text(days);$("#hours .number").text(hrs);$("#minutes .number").text(min);setTimeout(countDownTimer,1000);};var numberTransition=function numberTransition(id,endPoint,transitionDuration,transitionEase){$({numberCount:$(id).text()}).animate({numberCount:endPoint},{duration:transitionDuration,easing:transitionEase,step:function step(){$(id).text(Math.floor(this.numberCount));},complete:function complete(){$(id).text(this.numberCount);}});};var targetDate=new Date("2018/08/19 18:00:00");var days;var hrs;var min;var sec;$(function(){timeToLaunch();numberTransition('#days .number',days,1000,'easeOutQuad');numberTransition('#hours .number',hrs,1000,'easeOutQuad');numberTransition('#minutes .number',min,1000,'easeOutQuad');setTimeout(countDownTimer,1001);});;var loadButton=document.getElementById('load-more');var feed=new Instafeed({get:'user',userId:'4581355787',tagName:'awesome',resolution:'low_resolution',sortBy:'random',limit:'4',accessToken:'4581355787.54da896.dcfc4291a3794589984767b9ed9f5c0b',clientId:'dfdb76e4c7ce4cd0a92c12edab5d3eb4',after:function after(){if(!this.hasNext()){loadButton.setAttribute('disabled','disabled');}}});feed.run();loadButton.addEventListener('click',function(e){e.preventDefault();feed.next();});(function(d,s,id){var js,fjs=d.getElementsByTagName(s)[0];if(d.getElementById(id))return;js=d.createElement(s);js.id=id;js.src='https://connect.facebook.net/fr_FR/sdk.js#xfbml=1&version=v2.11';fjs.parentNode.insertBefore(js,fjs);})(document,'script','facebook-jssdk');}var hamburger=document.querySelector('.hamburger');var sidebarOpened=false;function openMenu(){document.body.classList.add('has-sidebar');hamburger.classList.add('is-active');sidebarOpened=true;return;}function closeMenu(){document.body.classList.remove('has-sidebar');hamburger.classList.remove('is-active');sidebarOpened=false;return;}hamburger.addEventListener('click',function(e){e.stopPropagation();e.preventDefault();if(!sidebarOpened){openMenu();}else{closeMenu();}});document.body.addEventListener('click',function(){if(sidebarOpened){document.body.classList.remove('has-sidebar');hamburger.classList.remove('is-active');sidebarOpened=false;return;}});if(pageTitle===' » Programme - Saint-Léon\'Art'){var fActive=function fActive(e){e.stopPropagation();if(document.querySelector('.program__navigation .day a.active')){document.querySelector('.program__navigation .day a.active').classList.remove('active');document.querySelector('.program .timeline.all#all').classList.remove('here');}e.currentTarget.classList.add('active');};var buttons=document.querySelectorAll('.program__navigation .day a');;Array.from(buttons).forEach(function($btn){$btn.addEventListener("click",fActive);});}if(pageTitle===' » À propos - Saint-Léon\'Art'){if(window.matchMedia("(min-width: 720px)").matches){$("#Glide").glide({startAt:2,paddings:"150",hoverpause:true});}else{$("#Glide").glide({startAt:2,hoverpause:true});}$('.count').each(function(){$(this).prop('Counter',0).animate({Counter:$(this).text()},{duration:4000,easing:'swing',step:function step(now){$(this).text(Math.ceil(now));}});});}var fAnimInput=function fAnimInput(){var input=document.querySelectorAll('.input');var getFocus=function getFocus(oEvent){oEvent.currentTarget.parentNode.querySelector('label').classList.add("focus");var oInput=oEvent.currentTarget.parentNode.querySelector('.input');setTimeout(function(){oInput.classList.add("border");},200);};var outFocus=function outFocus(e){if(e.currentTarget.parentNode.querySelector('.input').value.length===0){e.currentTarget.parentNode.querySelector('label').classList.remove("focus");}e.currentTarget.classList.remove("border");};Array.from(input).forEach(function($label){$label.addEventListener("focus",getFocus);$label.addEventListener("click",getFocus);$label.addEventListener("blur",outFocus);if($label.value!=""){$label.parentNode.querySelector('label').classList.add("focus");}});};fAnimInput();if(pageTitle===' » Tous les artistes - Saint-Léon\'Art'){jQuery(function($){$('#filter').submit(function(){var filter=$('#filter');$.ajax({url:filter.attr('action'),data:filter.serialize(),type:filter.attr('method'),success:function success(data){$('.artist__container').html(data);console.log(data);}});return false;});});}if(pageTitle===' » Tous les événements - Saint-Léon\'Art'){jQuery(function($){$('#event_filter').submit(function(){var filter=$('#event_filter');$.ajax({url:filter.attr('action'),data:filter.serialize(),type:filter.attr('method'),success:function success(data){$('.event__container').html(data);console.log(data);}});return false;});});}if(pageTitle===' » Actualités - Saint-Léon\'Art'){jQuery(function($){$('#news_filter').submit(function(){var filter=$('#news_filter');$.ajax({url:filter.attr('action'),data:filter.serialize(),type:filter.attr('method'),success:function success(data){$('.event__container').html(data);console.log(data);}});return false;});});}if(window.matchMedia("(min-width: 980px)").matches){var fAddLogoMenu=function fAnimMenu(){var menu=document.querySelector('ul.menu');var li=document.createElement("li");var span=document.createElement('span');var sheet=window.document.styleSheets[0];var midle=menu.childNodes[7];li.appendChild(span);span.appendChild(document.createTextNode("SaintLeon'Art"));menu.insertBefore(li,midle.nextSibling);li.classList.add('menu__item');li.classList.add('logo');span.classList.add('logo');menu.classList.add('onScroll');sheet.insertRule('.header {padding-top: 0px;}',sheet.cssRules.length);};var fRemoveLogoMenu=function fRemoveLogoMenu(e){var sheet=window.document.styleSheets[0];var menu=document.querySelector('ul.menu');var logo=menu.querySelector('.menu__item.logo');menu.classList.remove('onScroll');menu.removeChild(logo);sheet.insertRule('.header {padding-top: 24px;}',sheet.cssRules.length);};var AnimMenu=function(){var executed=false;var actionDo=false;return function(e){if(!executed){if(window.pageYOffset>10){executed=true;actionDo=true;fAddLogoMenu();}}if(actionDo&&executed){if(window.pageYOffset<10){actionDo=false;executed=false;fRemoveLogoMenu();}}};}();window.addEventListener('scroll',AnimMenu);window.addEventListener('load',AnimMenu);}if(pageTitle===' » Newsletter - Saint-Léon\'Art'){var PathLoader=function PathLoader(el){this.el=el;this.strokeLength=el.getTotalLength();this.el.style.strokeDasharray=this.el.style.strokeDashoffset=this.strokeLength;};PathLoader.prototype._draw=function(val){this.el.style.strokeDashoffset=this.strokeLength*(1-val);};PathLoader.prototype.setProgress=function(val,cb){this._draw(val);if(cb&&typeof cb==='function')cb();};PathLoader.prototype.setProgressFn=function(fn){if(typeof fn==='function')fn(this);};var body=document.body,svg=document.querySelector('svg path');if(svg!==null){svg=new PathLoader(svg);setTimeout(function(){document.body.classList.add('active');svg.setProgress(1);},200);}}$('.search-button').click(function(){$(this).parent().toggleClass('open');});})();
//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNjcmlwdC5qcyJdLCJuYW1lcyI6WyJwYWdlVGl0bGUiLCJkb2N1bWVudCIsImhlYWQiLCJnZXRFbGVtZW50c0J5VGFnTmFtZSIsImlubmVyVGV4dCIsInRpbWVUb0xhdW5jaCIsImN1cnJlbnREYXRlIiwiRGF0ZSIsImRpZmYiLCJ0YXJnZXREYXRlIiwiTWF0aCIsImFicyIsImZsb29yIiwiZGF5cyIsInNlYyIsImhycyIsIm1pbiIsImNvdW50RG93blRpbWVyIiwiJCIsInRleHQiLCJzZXRUaW1lb3V0IiwibnVtYmVyVHJhbnNpdGlvbiIsImlkIiwiZW5kUG9pbnQiLCJ0cmFuc2l0aW9uRHVyYXRpb24iLCJ0cmFuc2l0aW9uRWFzZSIsIm51bWJlckNvdW50IiwiYW5pbWF0ZSIsImR1cmF0aW9uIiwiZWFzaW5nIiwic3RlcCIsImNvbXBsZXRlIiwibG9hZEJ1dHRvbiIsImdldEVsZW1lbnRCeUlkIiwiZmVlZCIsIkluc3RhZmVlZCIsImdldCIsInVzZXJJZCIsInRhZ05hbWUiLCJyZXNvbHV0aW9uIiwic29ydEJ5IiwibGltaXQiLCJhY2Nlc3NUb2tlbiIsImNsaWVudElkIiwiYWZ0ZXIiLCJoYXNOZXh0Iiwic2V0QXR0cmlidXRlIiwicnVuIiwiYWRkRXZlbnRMaXN0ZW5lciIsImUiLCJwcmV2ZW50RGVmYXVsdCIsIm5leHQiLCJkIiwicyIsImpzIiwiZmpzIiwiY3JlYXRlRWxlbWVudCIsInNyYyIsInBhcmVudE5vZGUiLCJpbnNlcnRCZWZvcmUiLCJoYW1idXJnZXIiLCJxdWVyeVNlbGVjdG9yIiwic2lkZWJhck9wZW5lZCIsIm9wZW5NZW51IiwiYm9keSIsImNsYXNzTGlzdCIsImFkZCIsImNsb3NlTWVudSIsInJlbW92ZSIsInN0b3BQcm9wYWdhdGlvbiIsImZBY3RpdmUiLCJjdXJyZW50VGFyZ2V0IiwiYnV0dG9ucyIsInF1ZXJ5U2VsZWN0b3JBbGwiLCJBcnJheSIsImZyb20iLCJmb3JFYWNoIiwiJGJ0biIsIndpbmRvdyIsIm1hdGNoTWVkaWEiLCJtYXRjaGVzIiwiZ2xpZGUiLCJzdGFydEF0IiwicGFkZGluZ3MiLCJob3ZlcnBhdXNlIiwiZWFjaCIsInByb3AiLCJDb3VudGVyIiwibm93IiwiY2VpbCIsImZBbmltSW5wdXQiLCJpbnB1dCIsImdldEZvY3VzIiwib0V2ZW50Iiwib0lucHV0Iiwib3V0Rm9jdXMiLCJ2YWx1ZSIsImxlbmd0aCIsIiRsYWJlbCIsImpRdWVyeSIsInN1Ym1pdCIsImZpbHRlciIsImFqYXgiLCJ1cmwiLCJhdHRyIiwiZGF0YSIsInNlcmlhbGl6ZSIsInR5cGUiLCJzdWNjZXNzIiwiaHRtbCIsImNvbnNvbGUiLCJsb2ciLCJmQWRkTG9nb01lbnUiLCJmQW5pbU1lbnUiLCJtZW51IiwibGkiLCJzcGFuIiwic2hlZXQiLCJzdHlsZVNoZWV0cyIsIm1pZGxlIiwiY2hpbGROb2RlcyIsImFwcGVuZENoaWxkIiwiY3JlYXRlVGV4dE5vZGUiLCJuZXh0U2libGluZyIsImluc2VydFJ1bGUiLCJjc3NSdWxlcyIsImZSZW1vdmVMb2dvTWVudSIsImxvZ28iLCJyZW1vdmVDaGlsZCIsIkFuaW1NZW51IiwiZXhlY3V0ZWQiLCJhY3Rpb25EbyIsInBhZ2VZT2Zmc2V0IiwiUGF0aExvYWRlciIsImVsIiwic3Ryb2tlTGVuZ3RoIiwiZ2V0VG90YWxMZW5ndGgiLCJzdHlsZSIsInN0cm9rZURhc2hhcnJheSIsInN0cm9rZURhc2hvZmZzZXQiLCJwcm90b3R5cGUiLCJfZHJhdyIsInZhbCIsInNldFByb2dyZXNzIiwiY2IiLCJzZXRQcm9ncmVzc0ZuIiwiZm4iLCJzdmciLCJjbGljayIsInBhcmVudCIsInRvZ2dsZUNsYXNzIl0sIm1hcHBpbmdzIjoiMEJBQ0EsR0FBTUEsV0FBWUMsU0FBU0MsSUFBVCxDQUFjQyxvQkFBZCxDQUFtQyxPQUFuQyxFQUE0QyxDQUE1QyxFQUErQ0MsU0FBakUsQ0FFQSxHQUFJSixZQUFjLDZCQUFsQixDQUFpRCxJQStCcENLLGFBL0JvQyxDQStCN0MsUUFBU0EsYUFBVCxFQUF3QixDQUVwQixHQUFJQyxhQUFj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QTZCLE1BQTdCLEVBQ0gsQ0FGRCxFIiwiZmlsZSI6InNjcmlwdC5qcyIsInNvdXJjZXNDb250ZW50IjpbIlxyXG5jb25zdCBwYWdlVGl0bGUgPSBkb2N1bWVudC5oZWFkLmdldEVsZW1lbnRzQnlUYWdOYW1lKCd0aXRsZScpWzBdLmlubmVyVGV4dDtcclxuXHJcbmlmIChwYWdlVGl0bGUgPT09ICdCaWVudmVudWUgLSBTYWludC1Mw6lvblxcJ0FydCcgKXtcclxuXHJcbiAgICAvLyBDb3VudGRvd24gaG9tZSBwYWdlXHJcbiAgICAvKiAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLSovXHJcbiAgICAvLyBUaGUgZGF0ZSB5b3Ugd2FudCB0byBjb3VudCBkb3duIHRvXHJcbiAgICB2YXIgdGFyZ2V0RGF0ZSA9IG5ldyBEYXRlKFwiMjAxOC8wOC8xOSAxODowMDowMFwiKTtcclxuXHJcbiAgICAvLyBPdGhlciBkYXRlIHJlbGF0ZWQgdmFyaWFibGVzXHJcbiAgICB2YXIgZGF5cztcclxuICAgIHZhciBocnM7XHJcbiAgICB2YXIgbWluO1xyXG4gICAgdmFyIHNlYztcclxuXHJcbiAgICAvKiAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxyXG4gICAgKiBPTiBET0NVTUVOVCBMT0FEXHJcbiAgICAqIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tICovXHJcbiAgICAkKGZ1bmN0aW9uICgpIHtcclxuICAgICAgICAvLyBDYWxjdWxhdGUgdGltZSB1bnRpbCBsYXVuY2ggZGF0ZVxyXG4gICAgICAgIHRpbWVUb0xhdW5jaCgpO1xyXG4gICAgICAgIC8vIFRyYW5zaXRpb24gdGhlIGN1cnJlbnQgY291bnRkb3duIGZyb20gMCBcclxuICAgICAgICBudW1iZXJUcmFuc2l0aW9uKCcjZGF5cyAubnVtYmVyJywgZGF5cywgMTAwMCwgJ2Vhc2VPdXRRdWFkJyk7XHJcbiAgICAgICAgbnVtYmVyVHJhbnNpdGlvbignI2hvdXJzIC5udW1iZXInLCBocnMsIDEwMDAsICdlYXNlT3V0UXVhZCcpO1xyXG4gICAgICAgIG51bWJlclRyYW5zaXRpb24oJyNtaW51dGVzIC5udW1iZXInLCBtaW4sIDEwMDAsICdlYXNlT3V0UXVhZCcpO1xyXG4gICAgICAgIC8vIEJlZ2luIENvdW50ZG93blxyXG4gICAgICAgIHNldFRpbWVvdXQoY291bnREb3duVGltZXIsIDEwMDEpO1xyXG4gICAgfSk7XHJcblxyXG4gICAgLyogLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cclxuICAgICogRklHVVJFIE9VVCBUSEUgQU1PVU5UIE9GIFxyXG4gICAgVElNRSBMRUZUIEJFRk9SRSBMQVVOQ0hcclxuICAgICogLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0gKi9cclxuICAgIGZ1bmN0aW9uIHRpbWVUb0xhdW5jaCgpIHtcclxuICAgICAgICAvLyBHZXQgdGhlIGN1cnJlbnQgZGF0ZVxyXG4gICAgICAgIHZhciBjdXJyZW50RGF0ZSA9IG5ldyBEYXRlKCk7XHJcblxyXG4gICAgICAgIC8vIEZpbmQgdGhlIGRpZmZlcmVuY2UgYmV0d2VlbiBkYXRlc1xyXG4gICAgICAgIHZhciBkaWZmID0gKGN1cnJlbnREYXRlIC0gdGFyZ2V0RGF0ZSkgLyAxMDAwO1xyXG4gICAgICAgIHZhciBkaWZmID0gTWF0aC5hYnMoTWF0aC5mbG9vcihkaWZmKSk7XHJcblxyXG4gICAgICAgIC8vIENoZWNrIG51bWJlciBvZiBkYXlzIHVudGlsIHRhcmdldFxyXG4gICAgICAgIGRheXMgPSBNYXRoLmZsb29yKGRpZmYgLyAoMjQgKiA2MCAqIDYwKSk7XHJcbiAgICAgICAgc2VjID0gZGlmZiAtIGRheXMgKiAyNCAqIDYwICogNjA7XHJcblxyXG4gICAgICAgIC8vIENoZWNrIG51bWJlciBvZiBob3VycyB1bnRpbCB0YXJnZXRcclxuICAgICAgICBocnMgPSBNYXRoLmZsb29yKHNlYyAvICg2MCAqIDYwKSk7XHJcbiAgICAgICAgc2VjID0gc2VjIC0gaHJzICogNjAgKiA2MDtcclxuXHJcbiAgICAgICAgLy8gQ2hlY2sgbnVtYmVyIG9mIG1pbnV0ZXMgdW50aWwgdGFyZ2V0XHJcbiAgICAgICAgbWluID0gTWF0aC5mbG9vcihzZWMgLyAoNjApKTtcclxuICAgICAgICBzZWMgPSBzZWMgLSBtaW4gKiA2MDtcclxuICAgIH1cclxuXHJcbiAgICAvKiAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxyXG4gICAgKiBESVNQTEFZIFRIRSBDVVJSRU5UIFxyXG4gICAgQ09VTlQgVE8gTEFVTkNIXHJcbiAgICAqIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tICovXHJcbiAgICBmdW5jdGlvbiBjb3VudERvd25UaW1lcigpIHtcclxuXHJcbiAgICAgICAgLy8gRmlndXJlIG91dCB0aGUgdGltZSB0byBsYXVuY2hcclxuICAgICAgICB0aW1lVG9MYXVuY2goKTtcclxuXHJcbiAgICAgICAgLy8gV3JpdGUgdG8gY291bnRkb3duIGNvbXBvbmVudFxyXG4gICAgICAgICQoXCIjZGF5cyAubnVtYmVyXCIpLnRleHQoZGF5cyk7XHJcbiAgICAgICAgJChcIiNob3VycyAubnVtYmVyXCIpLnRleHQoaHJzKTtcclxuICAgICAgICAkKFwiI21pbnV0ZXMgLm51bWJlclwiKS50ZXh0KG1pbik7XHJcblxyXG4gICAgICAgIC8vIFJlcGVhdCB0aGUgY2hlY2sgZXZlcnkgc2Vjb25kXHJcbiAgICAgICAgc2V0VGltZW91dChjb3VudERvd25UaW1lciwgMTAwMCk7XHJcbiAgICB9XHJcblxyXG4gICAgLyogLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cclxuICAgICogVFJBTlNJVElPTiBOVU1CRVJTIEZST00gMFxyXG4gICAgVE8gQ1VSUkVOVCBUSU1FIFVOVElMIExBVU5DSFxyXG4gICAgKiAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLSAqL1xyXG4gICAgZnVuY3Rpb24gbnVtYmVyVHJhbnNpdGlvbihpZCwgZW5kUG9pbnQsIHRyYW5zaXRpb25EdXJhdGlvbiwgdHJhbnNpdGlvbkVhc2UpIHtcclxuICAgICAgICAvLyBUcmFuc2l0aW9uIG51bWJlcnMgZnJvbSAwIHRvIHRoZSBmaW5hbCBudW1iZXJcclxuICAgICAgICAkKHsgbnVtYmVyQ291bnQ6ICQoaWQpLnRleHQoKSB9KS5hbmltYXRlKHsgbnVtYmVyQ291bnQ6IGVuZFBvaW50IH0sIHtcclxuICAgICAgICAgICAgZHVyYXRpb246IHRyYW5zaXRpb25EdXJhdGlvbixcclxuICAgICAgICAgICAgZWFzaW5nOiB0cmFuc2l0aW9uRWFzZSxcclxuICAgICAgICAgICAgc3RlcDogZnVuY3Rpb24gKCkge1xyXG4gICAgICAgICAgICAgICAgJChpZCkudGV4dChNYXRoLmZsb29yKHRoaXMubnVtYmVyQ291bnQpKTtcclxuICAgICAgICAgICAgfSxcclxuICAgICAgICAgICAgY29tcGxldGU6IGZ1bmN0aW9uICgpIHtcclxuICAgICAgICAgICAgICAgICQoaWQpLnRleHQodGhpcy5udW1iZXJDb3VudCk7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICB9KTtcclxuICAgIH07XHJcblxyXG4gICAgLyogLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cclxuICAgICogSU5TVEFHUkFNIEZFRURcclxuICAgICogLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0gKi9cclxuXHJcbiAgICB2YXIgbG9hZEJ1dHRvbiA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCdsb2FkLW1vcmUnKTtcclxuXHJcbiAgICB2YXIgZmVlZCA9IG5ldyBJbnN0YWZlZWQoe1xyXG4gICAgICAgIGdldDogJ3VzZXInLFxyXG4gICAgICAgIHVzZXJJZDogJzQ1ODEzNTU3ODcnLFxyXG4gICAgICAgIHRhZ05hbWU6ICdhd2Vzb21lJyxcclxuICAgICAgICByZXNvbHV0aW9uOiAnbG93X3Jlc29sdXRpb24nLFxyXG4gICAgICAgIHNvcnRCeTogJ3JhbmRvbScsXHJcbiAgICAgICAgbGltaXQ6ICc0JyxcclxuICAgICAgICBhY2Nlc3NUb2tlbjogJzQ1ODEzNTU3ODcuNTRkYTg5Ni5kY2ZjNDI5MWEzNzk0NTg5OTg0NzY3YjllZDlmNWMwYicsXHJcbiAgICAgICAgY2xpZW50SWQ6ICdkZmRiNzZlNGM3Y2U0Y2QwYTkyYzEyZWRhYjVkM2ViNCcsXHJcbiAgICAgICAgYWZ0ZXI6IGZ1bmN0aW9uICgpIHtcclxuICAgICAgICAgICAgLy8gZGlzYWJsZSBidXR0b24gaWYgbm8gbW9yZSByZXN1bHRzIHRvIGxvYWRcclxuICAgICAgICAgICAgaWYgKCF0aGlzLmhhc05leHQoKSkge1xyXG4gICAgICAgICAgICAgICAgbG9hZEJ1dHRvbi5zZXRBdHRyaWJ1dGUoJ2Rpc2FibGVkJywgJ2Rpc2FibGVkJyk7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICB9LFxyXG4gICAgfSk7XHJcblxyXG4gICAgLy8gcnVuIG91ciBmZWVkIVxyXG4gICAgZmVlZC5ydW4oKTtcclxuXHJcbiAgICAvLyBiaW5kIHRoZSBsb2FkIG1vcmUgYnV0dG9uXHJcbiAgICBsb2FkQnV0dG9uLmFkZEV2ZW50TGlzdGVuZXIoJ2NsaWNrJywgZnVuY3Rpb24gKGUpIHtcclxuICAgICAgICBlLnByZXZlbnREZWZhdWx0KCk7XHJcbiAgICAgICAgZmVlZC5uZXh0KCk7XHJcbiAgICB9KTtcclxuXHJcblxyXG4gICAgLyogLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cclxuICAgICogRkFDRUJPT0sgRkVFRFxyXG4gICAgKiAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLSAqL1xyXG5cclxuICAgIChmdW5jdGlvbiAoZCwgcywgaWQpIHtcclxuICAgICAgICB2YXIganMsIGZqcyA9IGQuZ2V0RWxlbWVudHNCeVRhZ05hbWUocylbMF07XHJcbiAgICAgICAgaWYgKGQuZ2V0RWxlbWVudEJ5SWQoaWQpKSByZXR1cm47XHJcbiAgICAgICAganMgPSBkLmNyZWF0ZUVsZW1lbnQocyk7IGpzLmlkID0gaWQ7XHJcbiAgICAgICAganMuc3JjID0gJ2h0dHBzOi8vY29ubmVjdC5mYWNlYm9vay5uZXQvZnJfRlIvc2RrLmpzI3hmYm1sPTEmdmVyc2lvbj12Mi4xMSc7XHJcbiAgICAgICAgZmpzLnBhcmVudE5vZGUuaW5zZXJ0QmVmb3JlKGpzLCBmanMpO1xyXG4gICAgfShkb2N1bWVudCwgJ3NjcmlwdCcsICdmYWNlYm9vay1qc3NkaycpKTtcclxufVxyXG5cclxuLyogLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0qL1xyXG4vLyBIYW1idXJnZXIgbWVudSBhbmQgc2lkZWJhclxyXG4vKiAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLSovXHJcbiAgICBjb25zdCBoYW1idXJnZXIgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCcuaGFtYnVyZ2VyJyk7XHJcbiAgICAvLyBjb25zdCBzZWFyY2ggPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCcuc2VhcmNoLWljb24nKVxyXG4gICAgbGV0IHNpZGViYXJPcGVuZWQgPSBmYWxzZVxyXG5cclxuICAgIGZ1bmN0aW9uIG9wZW5NZW51KCl7XHJcbiAgICAgICAgZG9jdW1lbnQuYm9keS5jbGFzc0xpc3QuYWRkKCdoYXMtc2lkZWJhcicpXHJcbiAgICAgICAgaGFtYnVyZ2VyLmNsYXNzTGlzdC5hZGQoJ2lzLWFjdGl2ZScpXHJcbiAgICAgICAgc2lkZWJhck9wZW5lZCA9IHRydWU7XHJcbiAgICAgICAgcmV0dXJuO1xyXG4gICAgfVxyXG5cclxuICAgIGZ1bmN0aW9uIGNsb3NlTWVudSgpIHtcclxuICAgICAgICBkb2N1bWVudC5ib2R5LmNsYXNzTGlzdC5yZW1vdmUoJ2hhcy1zaWRlYmFyJylcclxuICAgICAgICBoYW1idXJnZXIuY2xhc3NMaXN0LnJlbW92ZSgnaXMtYWN0aXZlJylcclxuICAgICAgICBzaWRlYmFyT3BlbmVkID0gZmFsc2U7XHJcbiAgICAgICAgcmV0dXJuO1xyXG4gICAgfVxyXG4gICAgaGFtYnVyZ2VyLmFkZEV2ZW50TGlzdGVuZXIoJ2NsaWNrJywgZnVuY3Rpb24oZSkge1xyXG4gICAgICAgIGUuc3RvcFByb3BhZ2F0aW9uKClcclxuICAgICAgICBlLnByZXZlbnREZWZhdWx0KClcclxuICAgICAgICBpZiAoIXNpZGViYXJPcGVuZWQpIHtcclxuICAgICAgICAgICAgb3Blbk1lbnUoKVxyXG4gICAgICAgIH1lbHNle1xyXG4gICAgICAgICAgICBjbG9zZU1lbnUoKVxyXG4gICAgICAgIH1cclxuICAgIH0pO1xyXG4gICAgZG9jdW1lbnQuYm9keS5hZGRFdmVudExpc3RlbmVyKCdjbGljaycsIGZ1bmN0aW9uICgpIHtcclxuICAgICAgICBpZiAoc2lkZWJhck9wZW5lZCkge1xyXG4gICAgICAgICAgICBkb2N1bWVudC5ib2R5LmNsYXNzTGlzdC5yZW1vdmUoJ2hhcy1zaWRlYmFyJylcclxuICAgICAgICAgICAgaGFtYnVyZ2VyLmNsYXNzTGlzdC5yZW1vdmUoJ2lzLWFjdGl2ZScpXHJcbiAgICAgICAgICAgIHNpZGViYXJPcGVuZWQgPSBmYWxzZTtcclxuICAgICAgICAgICAgcmV0dXJuO1xyXG4gICAgICAgIH1cclxuICAgIH0pO1xyXG5cclxuICAgIC8vIHNlYXJjaC5hZGRFdmVudExpc3RlbmVyKCdjbGljaycsIGZ1bmN0aW9uKGUpIHtcclxuICAgIC8vICAgICBlLnN0b3BQcm9wYWdhdGlvbigpXHJcbiAgICAvLyAgICAgZS5wcmV2ZW50RGVmYXVsdCgpXHJcbiAgICAvLyAgICAgc2VhcmNoLmNsYXNzTGlzdC50b2dnbGUoJ29wZW4nKVxyXG4gICAgLy8gICAgIHNlYXJjaC5wYXJlbnROb2RlLmNsYXNzTGlzdC50b2dnbGUoJ29wZW4nKTtcclxuICAgIC8vICAgICBzZWFyY2gucGFyZW50Tm9kZS5wYXJlbnROb2RlLmNsYXNzTGlzdC50b2dnbGUoJ29wZW4nKTtcclxuICAgIC8vIH0pO1xyXG5cclxuaWYgKHBhZ2VUaXRsZSA9PT0gJyDCuyBQcm9ncmFtbWUgLSBTYWludC1Mw6lvblxcJ0FydCcpe1xyXG4gICAgLyogLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0qL1xyXG4gICAgLy8gRXZlbnQgbWVudVxyXG4gICAgLyogLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0qL1xyXG4gICAgICAgIGNvbnN0IGJ1dHRvbnMgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yQWxsKCcucHJvZ3JhbV9fbmF2aWdhdGlvbiAuZGF5IGEnKTtcclxuXHJcbiAgICAgICAgXHJcbiAgICAgICAgZnVuY3Rpb24gZkFjdGl2ZShlKSB7XHJcbiAgICAgICAgICAgIGUuc3RvcFByb3BhZ2F0aW9uKCk7XHJcbiAgICAgICAgICAgIGlmIChkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCcucHJvZ3JhbV9fbmF2aWdhdGlvbiAuZGF5IGEuYWN0aXZlJykpIHtcclxuICAgICAgICAgICAgICAgIGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJy5wcm9ncmFtX19uYXZpZ2F0aW9uIC5kYXkgYS5hY3RpdmUnKS5jbGFzc0xpc3QucmVtb3ZlKCdhY3RpdmUnKTtcclxuICAgICAgICAgICAgICAgIGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJy5wcm9ncmFtIC50aW1lbGluZS5hbGwjYWxsJykuY2xhc3NMaXN0LnJlbW92ZSgnaGVyZScpO1xyXG4gICAgICAgICAgICAgICAgXHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgZS5jdXJyZW50VGFyZ2V0LmNsYXNzTGlzdC5hZGQoJ2FjdGl2ZScpO1xyXG4gICAgICAgIH07XHJcbiAgICAgICAgQXJyYXkuZnJvbShidXR0b25zKS5mb3JFYWNoKGZ1bmN0aW9uKCRidG4pIHtcclxuICAgICAgICAgICAgJGJ0bi5hZGRFdmVudExpc3RlbmVyKFwiY2xpY2tcIiwgZkFjdGl2ZSk7XHJcbiAgICAgICAgfSk7XHJcbn1cclxuLy8gaWYgKHBhZ2VUaXRsZSA9PT0gJyDCuyBQYWdlIGNvbnRhY3QgLSBTYWludC1Mw6lvblxcJ0FydCcpe1xyXG4vLyAgICAgLyogLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0qL1xyXG4vLyAgICAgLy8gRm9ybSBjb250YWN0IGZlZWRiYWNrIGFuZCBmb2N1c1xyXG4vLyAgICAgLyogLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0qL1xyXG4vLyAgICAgICAgIHZhciBmQ2hlY2tGb3JtID0gZnVuY3Rpb24gZkNoZWNrRm9ybSgpIHtcclxuLy8gICAgICAgICAgICAgdmFyICRGb3JtID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcignZm9ybS5jb250YWN0Jyk7XHJcbi8vICAgICAgICAgICAgIHZhciAkU3ViamVjdEZpZWxkID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoJ3N1YmplY3QnKTtcclxuLy8gICAgICAgICAgICAgdmFyICRMYXN0TmFtZUZpZWxkID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoJ2xhc3RfbmFtZScpO1xyXG4vLyAgICAgICAgICAgICB2YXIgJEVtYWlsRmllbGQgPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgnZW1haWwnKTtcclxuLy8gICAgICAgICAgICAgdmFyICRNc2dGaWVsZCA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCdtZXNzYWdlJyk7XHJcbi8vICAgICAgICAgICAgIHZhciAkU3VibWl0QnRuID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcignLmJ0bi5idG4tLWFuaW0nKTtcclxuLy8gICAgICAgICAgICAgdmFyIHJlZ2V4cE5hbWUgPSAvXlthLXpBLVpcXHUwMEMwLVxcdTAwRkZdK1snLV0/W2EtekEtWlxcdTAwQzAtXFx1MDBGRl0rJC87XHJcbi8vICAgICAgICAgICAgIHZhciByZWdleHBFbWFpbCA9IC9eKFthLXowLTlfXFwuLV0rKUAoW1xcZGEtelxcLi1dKylcXC4oW2EtelxcLl17Miw2fSkkLztcclxuLy8gICAgICAgICAgICAgdmFyIHJlZ2V4cE1zZyA9IC9eKFthLXpBLVpdezIsNDB9ICsgW2EtekEtWl17Miw0MH0pJC87XHJcbi8vICAgICAgICAgICAgIHZhciBmQ2hlY2tBRmllbGQgPSBmdW5jdGlvbiBmQ2hlY2tBRmllbGQoZmllbGQsIHJlZ2V4cCkge1xyXG4vLyAgICAgICAgICAgICAgICAgaWYgKGZpZWxkLnZhbHVlID09ICcnKSB7XHJcbi8vICAgICAgICAgICAgICAgICAgICAgZmllbGQucGFyZW50Tm9kZS5xdWVyeVNlbGVjdG9yKCdzcGFuJykuaW5uZXJIVE1MID0gXCJWb3RyZSBjaGFtcHMgZGUgZm9ybXVsYWlyZSBlc3QgdmlkZS5cIjtcclxuLy8gICAgICAgICAgICAgICAgICAgICBmaWVsZC5wYXJlbnROb2RlLnF1ZXJ5U2VsZWN0b3IoJ3NwYW4nKS5jbGFzc0xpc3QuYWRkKCdvbicpO1xyXG4vLyAgICAgICAgICAgICAgICAgICAgIHJldHVybiBmYWxzZTtcclxuLy8gICAgICAgICAgICAgICAgIH0gZWxzZSBpZiAocmVnZXhwICYmICFyZWdleHAudGVzdChmaWVsZC52YWx1ZSkpIHtcclxuLy8gICAgICAgICAgICAgICAgICAgICBmaWVsZC5wYXJlbnROb2RlLnF1ZXJ5U2VsZWN0b3IoJ3NwYW4nKS5pbm5lckhUTUwgPSBcIklsIHNlbWJsZSBxdWUgbGEgdmFsZXVyIHJlbnRyw6kgYWl0IHVuIHByb2Jsw6htZS5cIjtcclxuLy8gICAgICAgICAgICAgICAgICAgICBmaWVsZC5wYXJlbnROb2RlLnF1ZXJ5U2VsZWN0b3IoJ3NwYW4nKS5jbGFzc0xpc3QuYWRkKCdvbicpO1xyXG4vLyAgICAgICAgICAgICAgICAgICAgIHJldHVybiBmYWxzZTtcclxuLy8gICAgICAgICAgICAgICAgIH0gZWxzZSB7XHJcbi8vICAgICAgICAgICAgICAgICAgICAgJFN1Ym1pdEJ0bi5yZW1vdmVBdHRyaWJ1dGUoJ2Rpc2FibGVkJyk7XHJcbi8vICAgICAgICAgICAgICAgICAgICAgZmllbGQucGFyZW50Tm9kZS5xdWVyeVNlbGVjdG9yKCdzcGFuJykuY2xhc3NMaXN0LnJlbW92ZSgnb24nKTtcclxuLy8gICAgICAgICAgICAgICAgICAgICBmaWVsZC5wYXJlbnROb2RlLnF1ZXJ5U2VsZWN0b3IoJy5pbnB1dCcpLmNsYXNzTGlzdC5hZGQoJ29rJyk7XHJcbi8vICAgICAgICAgICAgICAgICAgICAgcmV0dXJuIHRydWU7XHJcbi8vICAgICAgICAgICAgICAgICB9XHJcbi8vICAgICAgICAgICAgIH07XHJcbi8vICAgICAgICAgICAgIHZhciBmQ2hlY2tGaXJzdE5hbWUgPSBmdW5jdGlvbiBmQ2hlY2tGaXJzdE5hbWUoKSB7XHJcbi8vICAgICAgICAgICAgICAgICByZXR1cm4gZkNoZWNrQUZpZWxkKCRTdWJqZWN0RmllbGQsIHJlZ2V4cE5hbWUpO1xyXG4vLyAgICAgICAgICAgICB9O1xyXG4vLyAgICAgICAgICAgICB2YXIgZkNoZWNrTGFzdE5hbWUgPSBmdW5jdGlvbiBmQ2hlY2tMYXN0TmFtZSgpIHtcclxuLy8gICAgICAgICAgICAgICAgIHJldHVybiBmQ2hlY2tBRmllbGQoJExhc3ROYW1lRmllbGQsIHJlZ2V4cE5hbWUpO1xyXG4vLyAgICAgICAgICAgICB9O1xyXG4vLyAgICAgICAgICAgICB2YXIgZkNoZWNrRW1haWwgPSBmdW5jdGlvbiBmQ2hlY2tFbWFpbCgpIHtcclxuLy8gICAgICAgICAgICAgICAgIHJldHVybiBmQ2hlY2tBRmllbGQoJEVtYWlsRmllbGQsIHJlZ2V4cEVtYWlsKTtcclxuLy8gICAgICAgICAgICAgfTtcclxuLy8gICAgICAgICAgICAgdmFyIGZDaGVja01lc3NhZ2UgPSBmdW5jdGlvbiBmQ2hlY2tNZXNzYWdlKCkge1xyXG4vLyAgICAgICAgICAgICAgICAgaWYgKCRNc2dGaWVsZC52YWx1ZS5zcGxpdCgvXFxzKy8pLmxlbmd0aCA+PSAzKSB7XHJcbi8vICAgICAgICAgICAgICAgICAgICAgJE1zZ0ZpZWxkLnBhcmVudE5vZGUucXVlcnlTZWxlY3Rvcignc3BhbicpLmNsYXNzTGlzdC5yZW1vdmUoJ29uJyk7XHJcbi8vICAgICAgICAgICAgICAgICAgICAgJE1zZ0ZpZWxkLnBhcmVudE5vZGUucXVlcnlTZWxlY3RvcignLmlucHV0JykuY2xhc3NMaXN0LmFkZCgnb2snKTtcclxuLy8gICAgICAgICAgICAgICAgICAgICByZXR1cm4gdHJ1ZTtcclxuLy8gICAgICAgICAgICAgICAgIH1cclxuLy8gICAgICAgICAgICAgICAgIGlmICgkTXNnRmllbGQudmFsdWUuc3BsaXQoL1xccysvKS5sZW5ndGggPT09IDEpIHtcclxuLy8gICAgICAgICAgICAgICAgICAgICAkTXNnRmllbGQucGFyZW50Tm9kZS5xdWVyeVNlbGVjdG9yKCdzcGFuJykuaW5uZXJIVE1MID0gXCJWb3VzIG4nYXZleiBwYXMgw6ljcml0IGRlIG1lc3NhZ2UuXCI7XHJcbi8vICAgICAgICAgICAgICAgICAgICAgJE1zZ0ZpZWxkLnBhcmVudE5vZGUucXVlcnlTZWxlY3Rvcignc3BhbicpLmNsYXNzTGlzdC5hZGQoJ29uJyk7XHJcbi8vICAgICAgICAgICAgICAgICAgICAgcmV0dXJuIGZhbHNlO1xyXG4vLyAgICAgICAgICAgICAgICAgfVxyXG4vLyAgICAgICAgICAgICAgICAgaWYgKCRNc2dGaWVsZC52YWx1ZS5zcGxpdCgvXFxzKy8pLmxlbmd0aCA8IDUpIHtcclxuLy8gICAgICAgICAgICAgICAgICAgICAkTXNnRmllbGQucGFyZW50Tm9kZS5xdWVyeVNlbGVjdG9yKCdzcGFuJykuaW5uZXJIVE1MID0gXCJWb3VzIGF2ZXogcGFzIMOpY3JpcyB1biBhc3NleiBncmFuZCBtZXNzYWdlLlwiO1xyXG4vLyAgICAgICAgICAgICAgICAgICAgICRNc2dGaWVsZC5wYXJlbnROb2RlLnF1ZXJ5U2VsZWN0b3IoJ3NwYW4nKS5jbGFzc0xpc3QuYWRkKCdvbicpO1xyXG4vLyAgICAgICAgICAgICAgICAgICAgIHJldHVybiBmYWxzZTtcclxuLy8gICAgICAgICAgICAgICAgIH1cclxuLy8gICAgICAgICAgICAgfTtcclxuLy8gICAgICAgICAgICAgdmFyIGZDaGVja0FsbCA9IGZ1bmN0aW9uIGZDaGVja0FsbCgpIHtcclxuLy8gICAgICAgICAgICAgICAgIGlmIChmQ2hlY2tGaXJzdE5hbWUoKSAqIGZDaGVja0xhc3ROYW1lKCkgKiBmQ2hlY2tFbWFpbCgpICogZkNoZWNrTWVzc2FnZSgpICkge1xyXG4vLyAgICAgICAgICAgICAgICAgICAgICRGb3JtLmNsYXNzTGlzdC5hZGQoJ3ZhbGlkJyk7XHJcbi8vICAgICAgICAgICAgICAgICB9XHJcbi8vICAgICAgICAgICAgIH07XHJcblxyXG4vLyAgICAgICAgICAgICAkU3ViamVjdEZpZWxkLmFkZEV2ZW50TGlzdGVuZXIoJ2JsdXInLCBmQ2hlY2tGaXJzdE5hbWUsIGZhbHNlKTtcclxuLy8gICAgICAgICAgICAgJExhc3ROYW1lRmllbGQuYWRkRXZlbnRMaXN0ZW5lcignYmx1cicsIGZDaGVja0xhc3ROYW1lLCBmYWxzZSk7XHJcbi8vICAgICAgICAgICAgICRFbWFpbEZpZWxkLmFkZEV2ZW50TGlzdGVuZXIoJ2JsdXInLCBmQ2hlY2tFbWFpbCwgZmFsc2UpO1xyXG4vLyAgICAgICAgICAgICAkTXNnRmllbGQuYWRkRXZlbnRMaXN0ZW5lcignYmx1cicsIGZDaGVja01lc3NhZ2UsIGZhbHNlKTtcclxuLy8gICAgICAgICAgICAgJFN1Ym1pdEJ0bi5hZGRFdmVudExpc3RlbmVyKCdjbGljaycsIGZDaGVja0FsbCwgZmFsc2UpO1xyXG4vLyAgICAgICAgIH07XHJcbi8vICAgICAgICAgZkNoZWNrRm9ybSgpO1xyXG4vL31cclxuaWYgKHBhZ2VUaXRsZSA9PT0gJyDCuyDDgCBwcm9wb3MgLSBTYWludC1Mw6lvblxcJ0FydCcpe1xyXG4gICAgLyogLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0qL1xyXG4gICAgLy8gSlMgU2xpZGVyXHJcbiAgICAvKiAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLSovXHJcbiAgICBpZiAod2luZG93Lm1hdGNoTWVkaWEoXCIobWluLXdpZHRoOiA3MjBweClcIikubWF0Y2hlcykge1xyXG4gICAgICAgICQoXCIjR2xpZGVcIikuZ2xpZGUoe1xyXG4gICAgICAgICAgICBzdGFydEF0OiAyLFxyXG4gICAgICAgICAgICBwYWRkaW5nczogXCIxNTBcIixcclxuICAgICAgICAgICAgaG92ZXJwYXVzZTogdHJ1ZSxcclxuICAgICAgICB9KTtcclxuICAgIH0gZWxzZSB7XHJcbiAgICAgICAgJChcIiNHbGlkZVwiKS5nbGlkZSh7XHJcbiAgICAgICAgICAgIHN0YXJ0QXQ6IDIsXHJcbiAgICAgICAgICAgIGhvdmVycGF1c2U6IHRydWUsXHJcbiAgICAgICAgfSk7XHJcbiAgICB9XHJcbiAgICBcclxuICAgICQoJy5jb3VudCcpLmVhY2goZnVuY3Rpb24gKCkge1xyXG4gICAgICAgICQodGhpcykucHJvcCgnQ291bnRlcicsIDApLmFuaW1hdGUoe1xyXG4gICAgICAgICAgICBDb3VudGVyOiAkKHRoaXMpLnRleHQoKVxyXG4gICAgICAgIH0sIHtcclxuICAgICAgICAgICAgICAgIGR1cmF0aW9uOiA0MDAwLFxyXG4gICAgICAgICAgICAgICAgZWFzaW5nOiAnc3dpbmcnLFxyXG4gICAgICAgICAgICAgICAgc3RlcDogZnVuY3Rpb24gKG5vdykge1xyXG4gICAgICAgICAgICAgICAgICAgICQodGhpcykudGV4dChNYXRoLmNlaWwobm93KSk7XHJcbiAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIH0pO1xyXG4gICAgfSk7XHJcbn1cclxuLyogLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0qL1xyXG4vLyBJbnB1dCBBbmltXHJcbi8qIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tKi9cclxuICAgIHZhciBmQW5pbUlucHV0ID0gZnVuY3Rpb24gZkFuaW1JbnB1dCgpIHtcclxuICAgICAgICB2YXIgaW5wdXQgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yQWxsKCcuaW5wdXQnKTtcclxuXHJcbiAgICAgICAgdmFyIGdldEZvY3VzID0gZnVuY3Rpb24gZ2V0Rm9jdXMob0V2ZW50KSB7XHJcbiAgICAgICAgICAgIG9FdmVudC5jdXJyZW50VGFyZ2V0LnBhcmVudE5vZGUucXVlcnlTZWxlY3RvcignbGFiZWwnKS5jbGFzc0xpc3QuYWRkKFwiZm9jdXNcIik7XHJcbiAgICAgICAgICAgIHZhciBvSW5wdXQgPSAgb0V2ZW50LmN1cnJlbnRUYXJnZXQucGFyZW50Tm9kZS5xdWVyeVNlbGVjdG9yKCcuaW5wdXQnKTtcclxuICAgICAgICAgICAgc2V0VGltZW91dChmdW5jdGlvbigpe1xyXG4gICAgICAgICAgICAgICAgb0lucHV0LmNsYXNzTGlzdC5hZGQoXCJib3JkZXJcIik7XHJcbiAgICAgICAgICAgICAgICBcclxuICAgICAgICAgICAgICAgIH0sMjAwKTtcclxuICAgICAgICAgICAgXHJcbiAgICAgICAgfTtcclxuXHJcbiAgICAgICAgdmFyIG91dEZvY3VzID0gZnVuY3Rpb24gb3V0Rm9jdXMoZSkge1xyXG4gICAgICAgICAgICBpZiAoZS5jdXJyZW50VGFyZ2V0LnBhcmVudE5vZGUucXVlcnlTZWxlY3RvcignLmlucHV0JykudmFsdWUubGVuZ3RoID09PSAwICkge1xyXG4gICAgICAgICAgICAgICAgZS5jdXJyZW50VGFyZ2V0LnBhcmVudE5vZGUucXVlcnlTZWxlY3RvcignbGFiZWwnKS5jbGFzc0xpc3QucmVtb3ZlKFwiZm9jdXNcIik7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgZS5jdXJyZW50VGFyZ2V0LmNsYXNzTGlzdC5yZW1vdmUoXCJib3JkZXJcIik7XHJcbiAgICAgICAgICAgIFxyXG4gICAgICAgIH07XHJcbiAgICAgICAgQXJyYXkuZnJvbShpbnB1dCkuZm9yRWFjaChmdW5jdGlvbigkbGFiZWwpIHtcclxuICAgICAgICAgICAgJGxhYmVsLmFkZEV2ZW50TGlzdGVuZXIoXCJmb2N1c1wiLCBnZXRGb2N1cyk7XHJcbiAgICAgICAgICAgICRsYWJlbC5hZGRFdmVudExpc3RlbmVyKFwiY2xpY2tcIiwgZ2V0Rm9jdXMpO1xyXG4gICAgICAgICAgICAkbGFiZWwuYWRkRXZlbnRMaXN0ZW5lcihcImJsdXJcIiwgb3V0Rm9jdXMpO1xyXG4gICAgICAgICAgICBpZigkbGFiZWwudmFsdWUgIT0gXCJcIil7XHJcbiAgICAgICAgICAgICAgICAkbGFiZWwucGFyZW50Tm9kZS5xdWVyeVNlbGVjdG9yKCdsYWJlbCcpLmNsYXNzTGlzdC5hZGQoXCJmb2N1c1wiKVxyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgfSk7XHJcbiAgICB9O1xyXG4gICAgZkFuaW1JbnB1dCgpO1xyXG5cclxuLyogLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0qL1xyXG4vLyBUYXhvbm9teSBGaWx0ZXIgYW5kIHBhZ2luYXRpb25cclxuLyogLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0qL1xyXG5pZiAocGFnZVRpdGxlID09PSAnIMK7IFRvdXMgbGVzIGFydGlzdGVzIC0gU2FpbnQtTMOpb25cXCdBcnQnKXtcclxuICAgIGpRdWVyeShmdW5jdGlvbiAoJCkge1xyXG4gICAgICAgICQoJyNmaWx0ZXInKS5zdWJtaXQoZnVuY3Rpb24gKCkge1xyXG4gICAgICAgICAgICB2YXIgZmlsdGVyID0gJCgnI2ZpbHRlcicpO1xyXG4gICAgICAgICAgICAkLmFqYXgoe1xyXG4gICAgICAgICAgICAgICAgdXJsOiBmaWx0ZXIuYXR0cignYWN0aW9uJyksXHJcbiAgICAgICAgICAgICAgICBkYXRhOiBmaWx0ZXIuc2VyaWFsaXplKCksIC8vIGZvcm0gZGF0YVxyXG4gICAgICAgICAgICAgICAgdHlwZTogZmlsdGVyLmF0dHIoJ21ldGhvZCcpLCAvLyBQT1NUXHJcbiAgICAgICAgICAgICAgICBzdWNjZXNzOiBmdW5jdGlvbiAoZGF0YSkge1xyXG4gICAgICAgICAgICAgICAgICAgICQoJy5hcnRpc3RfX2NvbnRhaW5lcicpLmh0bWwoZGF0YSk7IC8vIGluc2VydCBkYXRhXHJcbiAgICAgICAgICAgICAgICAgICAgY29uc29sZS5sb2coZGF0YSk7XHJcbiAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIH0pO1xyXG4gICAgICAgICAgICByZXR1cm4gZmFsc2U7XHJcbiAgICAgICAgfSk7XHJcbiAgICB9KTtcclxufVxyXG5cclxuaWYgKHBhZ2VUaXRsZSA9PT0gJyDCuyBUb3VzIGxlcyDDqXbDqW5lbWVudHMgLSBTYWludC1Mw6lvblxcJ0FydCcpIHtcclxuICAgIGpRdWVyeShmdW5jdGlvbiAoJCkge1xyXG4gICAgICAgICQoJyNldmVudF9maWx0ZXInKS5zdWJtaXQoZnVuY3Rpb24gKCkge1xyXG4gICAgICAgICAgICB2YXIgZmlsdGVyID0gJCgnI2V2ZW50X2ZpbHRlcicpO1xyXG4gICAgICAgICAgICAkLmFqYXgoe1xyXG4gICAgICAgICAgICAgICAgdXJsOiBmaWx0ZXIuYXR0cignYWN0aW9uJyksXHJcbiAgICAgICAgICAgICAgICBkYXRhOiBmaWx0ZXIuc2VyaWFsaXplKCksIC8vIGZvcm0gZGF0YVxyXG4gICAgICAgICAgICAgICAgdHlwZTogZmlsdGVyLmF0dHIoJ21ldGhvZCcpLCAvLyBQT1NUXHJcbiAgICAgICAgICAgICAgICBzdWNjZXNzOiBmdW5jdGlvbiAoZGF0YSkge1xyXG4gICAgICAgICAgICAgICAgICAgICQoJy5ldmVudF9fY29udGFpbmVyJykuaHRtbChkYXRhKTsgLy8gaW5zZXJ0IGRhdGFcclxuICAgICAgICAgICAgICAgICAgICBjb25zb2xlLmxvZyhkYXRhKTtcclxuICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgfSk7XHJcbiAgICAgICAgICAgIHJldHVybiBmYWxzZTtcclxuICAgICAgICB9KTtcclxuICAgIH0pO1xyXG59XHJcblxyXG5pZiAocGFnZVRpdGxlID09PSAnIMK7IEFjdHVhbGl0w6lzIC0gU2FpbnQtTMOpb25cXCdBcnQnKSB7XHJcbiAgICBqUXVlcnkoZnVuY3Rpb24gKCQpIHtcclxuICAgICAgICAkKCcjbmV3c19maWx0ZXInKS5zdWJtaXQoZnVuY3Rpb24gKCkge1xyXG4gICAgICAgICAgICB2YXIgZmlsdGVyID0gJCgnI25ld3NfZmlsdGVyJyk7XHJcbiAgICAgICAgICAgICQuYWpheCh7XHJcbiAgICAgICAgICAgICAgICB1cmw6IGZpbHRlci5hdHRyKCdhY3Rpb24nKSxcclxuICAgICAgICAgICAgICAgIGRhdGE6IGZpbHRlci5zZXJpYWxpemUoKSwgLy8gZm9ybSBkYXRhXHJcbiAgICAgICAgICAgICAgICB0eXBlOiBmaWx0ZXIuYXR0cignbWV0aG9kJyksIC8vIFBPU1RcclxuICAgICAgICAgICAgICAgIHN1Y2Nlc3M6IGZ1bmN0aW9uIChkYXRhKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgJCgnLmV2ZW50X19jb250YWluZXInKS5odG1sKGRhdGEpOyAvLyBpbnNlcnQgZGF0YVxyXG4gICAgICAgICAgICAgICAgICAgIGNvbnNvbGUubG9nKGRhdGEpO1xyXG4gICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICB9KTtcclxuICAgICAgICAgICAgcmV0dXJuIGZhbHNlO1xyXG4gICAgICAgIH0pO1xyXG4gICAgfSk7XHJcbn1cclxuLyogLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0qL1xyXG4vLyBNZW51IGFuaW1hdGlvbiBvbiBzY3JvbGxcclxuLyogLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0qL1xyXG5cclxuaWYgKHdpbmRvdy5tYXRjaE1lZGlhKFwiKG1pbi13aWR0aDogOTgwcHgpXCIpLm1hdGNoZXMpIHtcclxuICAgIHZhciBmQWRkTG9nb01lbnUgPSBmdW5jdGlvbiBmQW5pbU1lbnUoKSB7XHJcbiAgICAgICAgY29uc3QgbWVudSA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJ3VsLm1lbnUnKTtcclxuICAgICAgICB2YXIgbGkgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KFwibGlcIik7XHJcbiAgICAgICAgY29uc3Qgc3BhbiA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ3NwYW4nKTtcclxuICAgICAgICB2YXIgc2hlZXQgPSB3aW5kb3cuZG9jdW1lbnQuc3R5bGVTaGVldHNbMF07XHJcbiAgICAgICAgY29uc3QgbWlkbGUgPSBtZW51LmNoaWxkTm9kZXNbN107XHJcbiAgICAgICAgbGkuYXBwZW5kQ2hpbGQoc3Bhbik7XHJcbiAgICAgICAgc3Bhbi5hcHBlbmRDaGlsZChkb2N1bWVudC5jcmVhdGVUZXh0Tm9kZShcIlNhaW50TGVvbidBcnRcIikpO1xyXG4gICAgICAgIG1lbnUuaW5zZXJ0QmVmb3JlKGxpLCBtaWRsZS5uZXh0U2libGluZyk7XHJcbiAgICAgICAgbGkuY2xhc3NMaXN0LmFkZCgnbWVudV9faXRlbScpO1xyXG4gICAgICAgIGxpLmNsYXNzTGlzdC5hZGQoJ2xvZ28nKTtcclxuICAgICAgICBzcGFuLmNsYXNzTGlzdC5hZGQoJ2xvZ28nKTtcclxuICAgICAgICBtZW51LmNsYXNzTGlzdC5hZGQoJ29uU2Nyb2xsJyk7XHJcbiAgICAgICAgc2hlZXQuaW5zZXJ0UnVsZSgnLmhlYWRlciB7cGFkZGluZy10b3A6IDBweDt9Jywgc2hlZXQuY3NzUnVsZXMubGVuZ3RoKTtcclxuICAgIH1cclxuICAgIHZhciBmUmVtb3ZlTG9nb01lbnUgPSBmdW5jdGlvbiBmUmVtb3ZlTG9nb01lbnUoZSkge1xyXG4gICAgICAgICAgICB2YXIgc2hlZXQgPSB3aW5kb3cuZG9jdW1lbnQuc3R5bGVTaGVldHNbMF07XHJcbiAgICAgICAgICAgIGNvbnN0IG1lbnUgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCd1bC5tZW51Jyk7XHJcbiAgICAgICAgICAgIGNvbnN0IGxvZ28gPSBtZW51LnF1ZXJ5U2VsZWN0b3IoJy5tZW51X19pdGVtLmxvZ28nKTtcclxuICAgICAgICAgICAgbWVudS5jbGFzc0xpc3QucmVtb3ZlKCdvblNjcm9sbCcpO1xyXG4gICAgICAgICAgICBtZW51LnJlbW92ZUNoaWxkKGxvZ28pO1xyXG4gICAgICAgICAgICBzaGVldC5pbnNlcnRSdWxlKCcuaGVhZGVyIHtwYWRkaW5nLXRvcDogMjRweDt9Jywgc2hlZXQuY3NzUnVsZXMubGVuZ3RoKTtcclxuICAgIH1cclxuICAgIHZhciBBbmltTWVudSA9IChmdW5jdGlvbiAoKSB7XHJcbiAgICAgICAgdmFyIGV4ZWN1dGVkID0gZmFsc2U7XHJcbiAgICAgICAgdmFyIGFjdGlvbkRvID0gZmFsc2U7XHJcbiAgICAgICAgcmV0dXJuIGZ1bmN0aW9uIChlKSB7XHJcbiAgICAgICAgICAgIGlmICghZXhlY3V0ZWQpIHtcclxuICAgICAgICAgICAgICAgIGlmICh3aW5kb3cucGFnZVlPZmZzZXQgPiAxMCkge1xyXG4gICAgICAgICAgICAgICAgICAgIGV4ZWN1dGVkID0gdHJ1ZTtcclxuICAgICAgICAgICAgICAgICAgICBhY3Rpb25EbyA9IHRydWU7XHJcbiAgICAgICAgICAgICAgICAgICAgZkFkZExvZ29NZW51KClcclxuICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICBpZihhY3Rpb25EbyAmJiBleGVjdXRlZCl7XHJcbiAgICAgICAgICAgICAgICBpZiAod2luZG93LnBhZ2VZT2Zmc2V0IDwgMTApIHtcclxuICAgICAgICAgICAgICAgICAgICBhY3Rpb25EbyA9IGZhbHNlO1xyXG4gICAgICAgICAgICAgICAgICAgIGV4ZWN1dGVkID0gZmFsc2U7XHJcbiAgICAgICAgICAgICAgICAgICAgZlJlbW92ZUxvZ29NZW51KCk7XHJcbiAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICB9O1xyXG4gICAgfSkoKTtcclxuXHJcbiAgICB3aW5kb3cuYWRkRXZlbnRMaXN0ZW5lcignc2Nyb2xsJywgQW5pbU1lbnUpO1xyXG4gICAgd2luZG93LmFkZEV2ZW50TGlzdGVuZXIoJ2xvYWQnLCBBbmltTWVudSk7XHJcbn1cclxuLyogLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0qL1xyXG4vLyBOZXdzbGV0dGVyIHZhbGlkYXRpb24gZWZmZWN0XHJcbi8qIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tKi9cclxuaWYgKHBhZ2VUaXRsZSA9PT0gJyDCuyBOZXdzbGV0dGVyIC0gU2FpbnQtTMOpb25cXCdBcnQnKXtcclxuICAgIGZ1bmN0aW9uIFBhdGhMb2FkZXIoZWwpIHtcclxuICAgICAgICB0aGlzLmVsID0gZWw7XHJcbiAgICAgICAgdGhpcy5zdHJva2VMZW5ndGggPSBlbC5nZXRUb3RhbExlbmd0aCgpO1xyXG4gICAgXHJcbiAgICAgICAgLy8gc2V0IGRhc2ggb2Zmc2V0IHRvIDBcclxuICAgICAgICB0aGlzLmVsLnN0eWxlLnN0cm9rZURhc2hhcnJheSA9XHJcbiAgICAgICAgICAgIHRoaXMuZWwuc3R5bGUuc3Ryb2tlRGFzaG9mZnNldCA9IHRoaXMuc3Ryb2tlTGVuZ3RoO1xyXG4gICAgfVxyXG4gICAgXHJcbiAgICBQYXRoTG9hZGVyLnByb3RvdHlwZS5fZHJhdyA9IGZ1bmN0aW9uICh2YWwpIHtcclxuICAgICAgICB0aGlzLmVsLnN0eWxlLnN0cm9rZURhc2hvZmZzZXQgPSB0aGlzLnN0cm9rZUxlbmd0aCAqICgxIC0gdmFsKTtcclxuICAgIH1cclxuICAgIFxyXG4gICAgUGF0aExvYWRlci5wcm90b3R5cGUuc2V0UHJvZ3Jlc3MgPSBmdW5jdGlvbiAodmFsLCBjYikge1xyXG4gICAgICAgIHRoaXMuX2RyYXcodmFsKTtcclxuICAgICAgICBpZiAoY2IgJiYgdHlwZW9mIGNiID09PSAnZnVuY3Rpb24nKSBjYigpO1xyXG4gICAgfVxyXG4gICAgXHJcbiAgICBQYXRoTG9hZGVyLnByb3RvdHlwZS5zZXRQcm9ncmVzc0ZuID0gZnVuY3Rpb24gKGZuKSB7XHJcbiAgICAgICAgaWYgKHR5cGVvZiBmbiA9PT0gJ2Z1bmN0aW9uJykgZm4odGhpcyk7XHJcbiAgICB9XHJcbiAgICBcclxuICAgIHZhciBib2R5ID0gZG9jdW1lbnQuYm9keSxcclxuICAgICAgICBzdmcgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCdzdmcgcGF0aCcpO1xyXG4gICAgXHJcbiAgICBpZiAoc3ZnICE9PSBudWxsKSB7XHJcbiAgICAgICAgc3ZnID0gbmV3IFBhdGhMb2FkZXIoc3ZnKTtcclxuICAgIFxyXG4gICAgICAgIHNldFRpbWVvdXQoZnVuY3Rpb24gKCkge1xyXG4gICAgICAgICAgICBkb2N1bWVudC5ib2R5LmNsYXNzTGlzdC5hZGQoJ2FjdGl2ZScpO1xyXG4gICAgICAgICAgICBzdmcuc2V0UHJvZ3Jlc3MoMSk7XHJcbiAgICAgICAgfSwgMjAwKTtcclxuICAgIH1cclxufVxyXG5cclxuJCgnLnNlYXJjaC1idXR0b24nKS5jbGljayhmdW5jdGlvbiAoKSB7XHJcbiAgICAkKHRoaXMpLnBhcmVudCgpLnRvZ2dsZUNsYXNzKCdvcGVuJyk7XHJcbn0pOyJdfQ==
